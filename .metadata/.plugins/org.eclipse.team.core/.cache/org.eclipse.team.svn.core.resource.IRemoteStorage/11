
package kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.web;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Random;

import javax.annotation.Resource;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jxl.Workbook;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import kr.or.dkcns.base.cmm.CustomerCode;
import kr.or.dkcns.base.cmm.session.SessionManageAdminUtil;
import kr.or.dkcns.base.cmm.util.DateUtil;
import kr.or.dkcns.base.cmm.util.PagingUtil;
import kr.or.dkcns.base.cmm.util.StringUtil;
import kr.or.dkcns.base.cmm.vo.DkMap;
import kr.or.dkcns.base.cmm.vo.FileVO;
import kr.or.dkcns.base.cmm.web.BaseController;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.service.BizBizApplMngService;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.service.BizIntegratedBusiness;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.service.BizTargetExtService;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.service.BsnsreqstinqireService;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.BizAppItemVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.BizAppTemplateVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.BsnsBasicInfoVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.BsnsReqDataVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.BsnsreqstinqireDetailVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.vo.PblancmntrngBsnsreqstinqireVO;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.web.adaptor.AppBizAppMng;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.web.adaptor.AppIntegratedBusiness;
import kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.web.adaptor.AppTargetExt;
import kr.or.dkcns.kita.cmm.util.Aria;
import kr.or.dkcns.kita.cmm.util.DRM;
import kr.or.dkcns.kita.cmm.util.UtilManager;
import kr.or.dkcns.kita.cmm.util.adaptor.DataSetValue;
import kr.or.dkcns.kita.cmm.util.adaptor.ResultSetValue;
import kr.or.dkcns.kita.cmm.util.adaptor.UtilManagerAdaptor;
import kr.or.dkcns.kita.cmm.vo.LoginInfoVO;
import kr.or.dkcns.kita.cstmrinfomanage.cstmrinqire.vo.CstmrReqDataVO;
import kr.or.dkcns.kita.system.service.CommonMnmtService;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.codec.binary.Base64;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.lang.StringUtils;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.psl.dataaccess.util.CamelUtil;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;


/**
 * <pre>
 * kr.or.dkcns.kita.bsnsreqstmanage.bsnsreqstmanage.web
 * @Class Name : BsnsreqstinqireController.java
 * @Description :  class
 * @Modification Information
 * </pre>
 * @author : Administrator
 * @date : 2017. 8. 21. 오전 10:57:36
 * @version : 1.0
 *
 * @Copyright ⓒ 2016 Daekyo CNS, All Rights Reserved.
 *
 * @history :
 *	-----------------------------------------------------------------------
 *	변경일				작성자						변경내용
 *	----------- ------------------- ---------------------------------------
 *	2017. 8. 21.		Administrator				최초 작성
 *	-----------------------------------------------------------------------
 *
 */
/**
 *
 */
@Controller
public class BsnsreqstinqireController extends BaseController{

    @JsonIgnore
    private static final Logger LOGGER = LoggerFactory.getLogger(BsnsreqstinqireController.class);

    /** BsnsreqstinqireService */
    @Resource(name = "bsnsreqstinqireService")
    private BsnsreqstinqireService bsnsreqstinqireService;

    /** bizBizApplMngService */
    @Resource(name = "bizBizApplMngService")
    private BizBizApplMngService bizBizApplMngService;

    /** bizTargetExtService */
    @Resource(name = "bizTargetExtService")
    private BizTargetExtService bizTargetExtService;

    /** bizBizApplMngService */
    @Resource(name = "bizIntegratedBusiness")
    private BizIntegratedBusiness bizIntegratedBusiness;

    /** EgovPropertyService */
    @Resource(name = "propertiesService")
    protected EgovPropertyService propertiesService;

    /**Drm Component Service */
    @Resource(name = "drmMngUtil")
    protected DRM drmMngUtil;


    @Resource(name = "commonMnmtService")
    private CommonMnmtService commonMnmtService;

    /**
     * <pre>
     * 개요 : 사업신청조회
     * </pre>
     * @Method Name : bsnsreqstinqireList
     * @author : Administrator
     * @date : 2017. 8. 21.
     * @param reqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireList.do")
    public String bsnsreqstinqireList(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsReqDataVO.setSchDeptCd(loginInfoVO.getDeptcode());   // 부서코드
        
        bsnsReqDataVO.setSchCreateId(loginInfoVO.getUserid()); //로그인 유저

        PagingUtil pagingUtil = new PagingUtil();
        PaginationInfo paginationInfo = pagingUtil.setValue(bsnsReqDataVO);
        LOGGER.info("getPageIndex======"+bsnsReqDataVO.getPageIndex());

        LOGGER.info("getSchJoinDiv===="+bsnsReqDataVO.getSchJoinDiv());
        LOGGER.info("schDept===="+bsnsReqDataVO.getSchDept());
        
        List<EgovMap> bsnsreqstinqireList = bsnsreqstinqireService.selectBsnsreqstinqireList(bsnsReqDataVO);

        model.addAttribute("resultList", bsnsreqstinqireList);

        int totCnt = bsnsreqstinqireService.selectBsnsreqstinqireListCount(bsnsReqDataVO);

        paginationInfo.setTotalRecordCount(totCnt);
        model.addAttribute("paginationInfo", paginationInfo);
        model.addAttribute("reqDataVO", bsnsReqDataVO);

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireList";
    }


  //신청자등록 버튼   kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireUrlEx.do
    /**
     * <pre>
     * 개요 : 신청자/참가자 엑셀 등록 화면
     * </pre>
     * @Method Name : bsnsreqstinqireApplcntregist
     * @author : Administrator
     * @date : 2017. 8. 25.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntregistPopup.do")
    public String bsnsreqstinqireApplcntregist(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        LOGGER.debug("=========bsnsreqstinqireApplcntregist===============");

        List<DkMap> resultMapLIst = bsnsreqstinqireService.selectBsnsreqstinqireDetail(bsnsReqDataVO);

        DkMap resultMap = resultMapLIst.get(0);

        //resultMap.get("completeYn").toString();
        
        if(StringUtils.isEmpty(bsnsReqDataVO.getReadOnlyYn())){
            bsnsReqDataVO.setReadOnlyYn("N");
        }

        model.addAttribute("completeYn", resultMap.get("completeYn").toString());
        model.addAttribute("reqDataVO",bsnsReqDataVO);

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntregistPopup";
    }


    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bizStateMonitoringPopup.do")
    public String bizStateMonitoringPopup(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        LOGGER.debug("=========bizStateMonitoringPopup===============");


        LOGGER.info( "bizSeq = "+bsnsReqDataVO.getBizSeq());
        //온라인 사업등록 정보
        EgovMap bizRegistMap =  bsnsreqstinqireService.selectBizRegistInfo(bsnsReqDataVO);

        //마케팅 실시 정보
        EgovMap marktetingMap = bsnsreqstinqireService.selectMarketingInfo(bsnsReqDataVO);

        //사업참가자 현황, 사업수행(참가자 선별), 사업완료 정보
        EgovMap businessMap =  bsnsreqstinqireService.selectBusinessInfo(bsnsReqDataVO);

        //만족도조사 실시 정보
        EgovMap satisfactionMap =  bsnsreqstinqireService.selectSatisfactionInfo(bsnsReqDataVO);

        model.addAttribute("bizRegistMap",bizRegistMap);
        model.addAttribute("marktetingMap",marktetingMap);
        model.addAttribute("businessMap",businessMap);
        model.addAttribute("satisfactionMap",satisfactionMap);
        model.addAttribute("reqDataVO",bsnsReqDataVO);

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bizStateMonitoringPopup";
    }

  //참가자등록 버튼    /kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireAdhrncregist.do
    /**
     * <pre>
     * 개요 : 참가자 엑셀 등록 화면
     * </pre>
     * @Method Name : bsnsreqstinqireAdhrncregist
     * @author : Administrator
     * @date : 2017. 8. 25.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    /*@RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireAdhrncregistPopup.do")
    public String bsnsreqstinqireAdhrncregist(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        PagingUtil pagingUtil = new PagingUtil();
        PaginationInfo paginationInfo = pagingUtil.setValue(bsnsReqDataVO);
        LOGGER.debug(""+paginationInfo.toString());


        model.addAttribute("reqDataVO",bsnsReqDataVO);

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireAdhrncregistPopup";
    }*/



    /**
     * <pre>
     * 개요 : 신청자, 참가자 엑셀등록 처리
     * </pre>
     * @Method Name : bsnsreqExcelUploadProc
     * @author : Administrator
     * @date : 2017. 10. 26.
     * @param multiRequest
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */ 	
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqExcelUploadProc.do")
    public ModelAndView bsnsreqExcelUploadProc(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");
        try{
            LOGGER.info("bsnsreqExcelUploadProc()====IN");
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());

            String FileDate = DateUtil.getDatetimeString();

            String upDir    = propertiesService.getString("kita.crm.serviceFile.path"); //pConf.getProperty("serviceFile.path") +"/" ;
            LOGGER.info("upDir : "+upDir);
            
            if(StringUtil.notEmpty(upDir)){
                File upD = new File(upDir);
                if(!upD.exists())
                    upD.mkdirs();
            }
            File drm = new File(drmMngUtil.DRMFilePath());
            if(drm.exists() == false)
            {
                drm.mkdirs();
            }

            int maxMega = StringUtil.zeroConvert(propertiesService.getString("kita.file.upload.limitSize"));
            int UPLOAD_MAX_SIZE = 1024 * 1024 * maxMega ;
            String realFileName="";
            //List<FileVO> fileList = commonMnmtService.saveAtchFiles(multiRequest, upDir);
            List<FileVO> fileList = commonMnmtService.saveAtchFiles(multiRequest, drmMngUtil.DRMFilePath());
            String mmsFilename = "";
            FileVO fv = null;
            String fieldName = "";

            if(fileList!=null&&fileList.size()>0){
                fv = fileList.get(0);
                
                bsnsBasicInfoVO.setFileName(fv.getPhysFileNm());
                /**
                 * TODO :  웹에서 등록시 다중 첨부파일을 처리하는 로직*******************************
                 *
                realFileName= fv.getAtchFileNm();

                int idx = realFileName.lastIndexOf("\\");
                if(idx == -1){
                    idx = realFileName.lastIndexOf("/");
                }
                realFileName = realFileName.substring(idx+1);

                if( realFileName.lastIndexOf("\\") > -1 ) {
                    realFileName = realFileName.substring((realFileName.lastIndexOf("\\")+1), realFileName.length());
                }

                fieldName = fv.getFileItem().getFieldName();

                if ("file_upload01".equals(fieldName)){
                    bsnsBasicInfoVO.setFileName1(realFileName);

                } else if ("file_upload02".equals(fieldName)){
                    bsnsBasicInfoVO.setFileName2(realFileName);

                } else if ("file_upload03".equals(fieldName)){
                    bsnsBasicInfoVO.setFileName3(realFileName);

                } else if ("file_upload04".equals(fieldName)){
                    bsnsBasicInfoVO.setFileName4(realFileName);

                } else if ("file_upload05".equals(fieldName)){
                    bsnsBasicInfoVO.setFileName5(realFileName);

                }
                **********************************************************************************************/

                /**
                 * TODO : DRM 솔루션 확인 안됨 java.lang.UnsatisfiedLinkError
                 * */
                //drmMngUtil.Extract(drmMngUtil.DRMFilePath(), upDir, fv.getAtchFileNm(), realFileName);
                
                LOGGER.info("drmMngUtil.DRMFilePath() : "+drmMngUtil.DRMFilePath());
                LOGGER.info("upDir : "+upDir);
                LOGGER.info("fileVO.getPhysFileNm() : "+fv.getPhysFileNm());
                
                //업로드 대상 복호화 
                drmMngUtil.Extract(drmMngUtil.DRMFilePath(), upDir, fv.getPhysFileNm(), fv.getPhysFileNm());

            }
            //엑셀파일 DATA DB저장 처리
            int ret = 0;


            if(StringUtil.notEmpty(bsnsBasicInfoVO.getUploadType()) && "1".equals(bsnsBasicInfoVO.getUploadType())){
                //사업완료 및 업로드 엑셀 내 신청자를 참가자로 변경처리 기능
                ret = bsnsreqstinqireService.insertBsnsAppCompForExcel(bsnsBasicInfoVO);
            }else if(StringUtil.notEmpty(bsnsBasicInfoVO.getUploadType()) && "0".equals(bsnsBasicInfoVO.getUploadType())){
                //사업신청서 신청자 엑셀 등록
                ret = bsnsreqstinqireService.insertBsnsAppForExcel(bsnsBasicInfoVO);
            }
            if(ret==1){
                mav.addObject("success", true);
            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
            }
        } catch (NullPointerException e) {
            LOGGER.error("bsnsreqExcelUploadProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("bsnsreqExcelUploadProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }

    /**
     * <pre>
     * 개요 : URL보기 팝업 호출
     * </pre>
     * @Method Name : bsnsreqstinqireUrlEx
     * @author : Administrator
     * @date : 2017. 8. 29.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireUrlPopup.do")
        public String bsnsreqstinqireUrlEx(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
                HttpServletResponse response) throws Exception {
       UtilManager util = new UtilManager();

       String tpUrl = propertiesService.getString("kita.crm.bizTemplate.url");

       //사업신청 상세 정보
       List<DkMap> detailMapList = bsnsreqstinqireService.selectBsnsreqstinqireDetail(bsnsReqDataVO);
       DkMap detailMap = detailMapList.get(0);

       /*String nonTarget = (String) detailMap.get("nonTarget");
       String editTypeYn = (String) detailMap.get("editTypeYn");*/
       
       
       String ParamBizTargetType = (String) detailMap.get("bizTargetType");
       String paramBizSeq = bsnsReqDataVO.getBizSeq();
       // String paramGubun = bsnsReqDataVO.getGubun(); //1:기본형 참가신청서(설명회등) , 9 : 맞춤형 참가 신청서 , 2 : 상담회 , 3 : 사절단
       String paramGubun = "1";
       //String paramEditTypeYn = bsnsReqDataVO.getEditTypeYn();
       String paramBizEndYn = bsnsReqDataVO.getBizEndYn();

       
       String templateUrl = "";//템플릿
       String appUrl = "";//신청서

       String nMemTemplateUrl = "";//비회원템플릿
       String nMemAppUrl = "";//비회원신청서
       
       //tpUrl = tpUrl+"/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireBizAppTempPopup.do?";
       
       
       /*if("1".equals(ParamBizTargetType) || "3".equals(ParamBizTargetType)){ // 1:기본형 참가신청서(설명회등)  ====> 회원사로 변환 필요하므로 요건 정의 확인 필요
           templateUrl = tpUrl+"targetUrl=MT002050&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           appUrl = tpUrl+"targetUrl=MT002054&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;*/
           /*
           if("Y".equals(editTypeYn)){
               
              templateUrl = tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
              appUrl = tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
              
            }else{
               
               templateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               appUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002060,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
           }
           */
           
         /*  if("2".equals(ParamBizTargetType)){
               nMemTemplateUrl= tpUrl+"targetUrl=MT002050&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
               nMemAppUrl= tpUrl+"targetUrl=MT002054&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           }*/
           
           
          /* if("Y".equals(nonTarget) && "Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               
           }else if("Y".equals(nonTarget) && !"Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002060,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               
           }*/
       /*} else if("2".equals(paramGubun)) { //2 : 상담회 ====> 비회원사로 변환 필요하므로 요건 정의 확인 필요
           //templateUrl = tpUrl+"/jsp/marketing/MT002050.jsp?bizSeq="+bizSeq+"&gubun="+gubun;//템플릿
           //appUrl = tpUrl+"/jsp/marketing/MT002070.jsp?bizSeq="+bizSeq+"&gubun="+gubun;//신청서
           templateUrl = tpUrl+"targetUrl=MT002050&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           appUrl = tpUrl+"targetUrl=MT002054&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;*/
           /*
           if("Y".equals(editTypeYn)){
               templateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002050"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               appUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
           }else{
               
               templateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               appUrl= tpUrl+"/jsp/marketing/MT002042.jsp?targetUrl=MT002070,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
           }   
           */
          /* if("Y".equals(nonTarget) && "Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               
           }else if("Y".equals(nonTarget) && !"Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002070,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
           }
           
       } else if("3".equals(paramGubun)) { // 3 : 사절단 ====> 회원사(회비 완납사)로 변환 필요하므로 요건 정의 확인 필요
           //templateUrl = tpUrl+"/jsp/marketing/MT002050.jsp?bizSeq="+bizSeq+"&gubun="+gubun;//템플릿
           //appUrl = tpUrl+"/jsp/marketing/MT002070.jsp?bizSeq="+bizSeq+"&gubun="+gubun;//신청서 
           templateUrl = tpUrl+"targetUrl=MT002050&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           appUrl = tpUrl+"targetUrl=MT002054&bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;*/
           /*
           if("Y".equals(editTypeYn)){
               templateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               appUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               
           }else{
               
               templateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
               appUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002070,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",M";
           }    
           */   
          /* if("Y".equals(nonTarget) && "Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002054,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               
           }else if("Y".equals(nonTarget) && !"Y".equals(editTypeYn)){
               
               nMemTemplateUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002050,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
               nMemAppUrl= tpUrl+"/jsp/marketing/MT002042.jsp?param=MT002070,"+paramBizSeq+","+paramGubun+","+ paramBizEndYn+",N";
           }*/
       //}
       
       
       if("M".equals(ParamBizTargetType) || "P".equals(ParamBizTargetType)){
           templateUrl = tpUrl+"/kita/bsnsreqstmanage/bsnsreqstmanage/partcptreqstinqireType1.do?bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           appUrl = tpUrl+"/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistEditType.do?bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
       }
       if("N".equals(ParamBizTargetType)){
           nMemTemplateUrl= tpUrl+"/kita/bsnsreqstmanage/bsnsreqstmanage/partcptreqstinqireType1.do?bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
           nMemAppUrl= tpUrl+"/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistEditType.do?bizSeq="+paramBizSeq+"&gubun="+paramGubun+"&bizEndYn="+ paramBizEndYn+"&bizTargetType="+ParamBizTargetType;
       }
       
       //사업소개 템플릿 - templateUrl : MT002050---->  "/kita/bsnsreqstmanage/bsnsreqstmanage/partcptreqstinqireType1.do"
       //사업신청사       - appUrl : MT002054 사업신청등록(편집형) -----> "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistEditType.do"
       //각 메소드 파라메터 확인 필요!!!!!
       
       model.addAttribute("bsnsReqDataVO", bsnsReqDataVO); 
       model.addAttribute("templateUrl", templateUrl);
       model.addAttribute("appUrl", appUrl);
       model.addAttribute("nMemTemplateUrl", nMemTemplateUrl);
       model.addAttribute("nMemAppUrl", nMemAppUrl);


        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireUrlPopup";
    }

    
    
    /**
     * <pre>
     * 개요 : 사업신청등록 초기화면
     * </pre>
     * @Method Name : bsnsreqstregistRegistView
     * @author : Administrator
     * @date : 2017. 9. 12.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistRegistView.do")
    public String bsnsreqstregistRegistView(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        
        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsReqDataVO.setUserId(loginInfoVO.getUserid());
        bsnsReqDataVO.setSchDeptCd(loginInfoVO.getDeptcode());
        
        //그룹웨어에서 호출시 사업명, 품의번호의 값이 넘어오면 화면에 표시 및 설정한다.
        if(StringUtils.isNotEmpty(bsnsReqDataVO.getGwBizTitle())){
            
            bsnsReqDataVO.setBizTitle(bsnsReqDataVO.getGwBizTitle());
            bsnsReqDataVO.setSchBizTitle(bsnsReqDataVO.getGwBizTitle());
        }
        
        if(StringUtils.isNotEmpty(bsnsReqDataVO.getGwConsiderNo())){
            
            //사업등록용 품의번호
            bsnsReqDataVO.setGwConsiderNo1(bsnsReqDataVO.getGwConsiderNo());
            
            //사업결과등록용 품의번호
            bsnsReqDataVO.setGwConsiderNo2(bsnsReqDataVO.getGwConsiderNo());
        }
        
     // 편집형 신청서 템플릿 조회
        //1.전체
        List<DkMap> templateList = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //2.고객DB
        bsnsReqDataVO.setTplGubun("1");
        List<DkMap> templateListDB = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //3.부서별
        bsnsReqDataVO.setTplGubun("2");
        List<DkMap> templateListDept = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //4.개인별
        bsnsReqDataVO.setTplGubun("3");
        List<DkMap> templateListMember = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        
        // 편집형 신청서 항목 조회
        //1.전체
        List<EgovMap> bizAppItemList = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //2.고객DB
        bsnsReqDataVO.setItemGubun("1");
        List<EgovMap> bizAppItemListDB = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //3.부서별
        bsnsReqDataVO.setItemGubun("2");
        List<EgovMap> bizAppItemListDept = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //4.개인별
        bsnsReqDataVO.setItemGubun("3");
        List<EgovMap> bizAppItemListMember = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        
        // 사업소개 템플릿 목록 조회
        List<DkMap> bizIntroTemplateList = bsnsreqstinqireService.selectBizIntroTemplateList(bsnsReqDataVO);
        
        //지부코드 리스트
        List<EgovMap> jibuCdList = bsnsreqstinqireService.selectjibuInfoList(bsnsReqDataVO);
        
        model.addAttribute("tMenuCode", "800");
        model.addAttribute("templateList", templateList);
        model.addAttribute("templateListDB", templateListDB);
        model.addAttribute("templateListDept", templateListDept);
        model.addAttribute("templateListMember", templateListMember);
        
        model.addAttribute("bizAppItemList", bizAppItemList);
        model.addAttribute("bizAppItemListDB", bizAppItemListDB);
        model.addAttribute("bizAppItemListDept", bizAppItemListDept);
        model.addAttribute("bizAppItemListMember", bizAppItemListMember);
        
        model.addAttribute("bizIntroTemplateList", bizIntroTemplateList);
        
        model.addAttribute("jibuCdList", jibuCdList);
        
        model.addAttribute("reqDataVO", bsnsReqDataVO);
        
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistRegistTab";
        
    }
    
    /**
     * <pre>
     * 개요 : 사업결과등록 팝업 호출
     * </pre>
     * @Method Name : bsnsreqstregistResultRegistPopup
     * @author : Administrator
     * @date : 2017. 10. 26.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */ 	
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistResultRegistPopup.do")
    public String bsnsreqstregistResultRegistPopup(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        
        //그룹웨어에서 호출시 사업명, 심의번호의 값이 넘어오면 화면에 표시 및 설정한다.
        if(StringUtils.isNotEmpty(bsnsReqDataVO.getGwBizTitle())){
            
            bsnsReqDataVO.setBizTitle(bsnsReqDataVO.getGwBizTitle());
            bsnsReqDataVO.setSchBizTitle(bsnsReqDataVO.getGwBizTitle());
        }
        
        if(StringUtils.isNotEmpty(bsnsReqDataVO.getGwConsiderNo())){
            
            //사업결과등록용  심의번호
            bsnsReqDataVO.setGwConsiderNo2(bsnsReqDataVO.getGwConsiderNo());
        }
        
        model.addAttribute("reqDataVO", bsnsReqDataVO);
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistResultRegistPopup"; 
    }
    
    
        
        
    /**
     * <pre>
     * 개요 : 설문조사 팝업 호출
     * </pre>
     * @Method Name : surveyTypePopup
     * @author : Administrator
     * @date : 2017. 10. 25.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */ 	
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/surveyTypePopup.do")
    public String surveyTypePopup(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        
        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsReqDataVO.setUserId(loginInfoVO.getUserid());
        
        String surveyUrl = propertiesService.getString("kita.crm.survey.request.url");
        
        List<EgovMap>surveyQuestionList = bsnsreqstinqireService.selectSurveyQuestionList();
        
        model.addAttribute("surveyUrl", surveyUrl);
        model.addAttribute("surveyQuestionList", surveyQuestionList);
        model.addAttribute("reqDataVO", bsnsReqDataVO);
        
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/surveyTypePopup";
    }
    
    /**
     * <pre>
     * 개요 : survey 팝업 호출시 파라미터 암호화 처리
     * </pre>
     * @Method Name : surveyAriaEncrypt
     * @author : Administrator
     * @date : 2017. 10. 27.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/surveyAriaEncrypt.do")
    public ModelAndView surveyAriaEncrypt(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        try {
            //파라미터를 ARIA방식으로 암호화
            /* 팝업링크 키생성 */
            String ariaKey = "SDCITeGovFrameworkKitaEncryptionKey";
            Aria aria = new Aria(ariaKey);
    
            //매핑용 링크키 생성 및 설정
            //String crmFrameEncrypt = aria.Encrypt("Y");
            String bizSeqEncrypt = aria.Encrypt(bsnsReqDataVO.getBizSeq());
            String userIdEncrypt = aria.Encrypt(bsnsReqDataVO.getUserId());
            String qustTypeEncrypt = aria.Encrypt(bsnsReqDataVO.getQustType());
            
            //LOGGER.info("crmFrameEncrypt : "+crmFrameEncrypt);
            LOGGER.info("bizSeqEncrypt : "+bizSeqEncrypt);
            LOGGER.info("userIdEncrypt : "+userIdEncrypt);
            LOGGER.info("qustTypeEncrypt : "+qustTypeEncrypt);
            
            mav.addObject("success", true);
            //mav.addObject("crmFrame", crmFrameEncrypt);
            mav.addObject("bizSeq", bizSeqEncrypt);
            mav.addObject("userId", userIdEncrypt);
            mav.addObject("qustType", qustTypeEncrypt);
            
        } catch (NullPointerException e) {
            LOGGER.error("surveyAriaEncrypt() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("surveyAriaEncrypt() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }
    
    /**
     * <pre>
     * 개요 : 사업신청등록 처리
     * </pre>
     * @Method Name : insertBizAppProc
     * @author : Administrator
     * @date : 2017. 9. 12.
     * @param multiRequest
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertBizAppProc.do")
    public ModelAndView insertBizAppProc(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        try{
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());
            bsnsBasicInfoVO.setDept(loginInfoVO.getDeptcode());
            String bizTitle = bsnsBasicInfoVO.getBizTitle();
            int ret = 0;

            //사업신청관리 등록 결과값(BIZ_SEQ)을 반환 받는다.
            ret = bsnsreqstinqireService.cmmBizAppProc(multiRequest, bsnsBasicInfoVO);

            if(ret > 0){
                mav.addObject("success", true);
                mav.addObject("bizSeq", ret);
                mav.addObject("bizTitle", bizTitle);
                mav.addObject("okMsg", "등록 되었습니다.");

            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", "등록에 실패했습니다.");
            }
        } catch (NullPointerException e) {
            LOGGER.error("updateBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("insertBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }
    
    /**
     * <pre>
     * 개요 : 사업결과등록-신규 초기화면
     * </pre>
     * @Method Name : bsnsreqstregistResultRegistView
     * @author : Administrator
     * @date : 2017. 9. 12.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistResultRegistView.do")
    public String bsnsreqstregistResultRegistView(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        
        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsReqDataVO.setUserId(loginInfoVO.getUserid());
        bsnsReqDataVO.setDeptCd(loginInfoVO.getDeptcode());
        
        
        model.addAttribute("tMenuCode", "800");
        
        model.addAttribute("reqDataVO", bsnsReqDataVO);
        
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstregistResultRegist";
        
    }
    
    /**
     * <pre>
     * 개요 : [사업결과등록 - 신규] 등록처리
     * </pre>
     * @Method Name : insertResultRegistProc
     * @author : Administrator
     * @date : 2017. 10. 23.
     * @param multiRequest
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */ 	
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertResultRegistProc.do")
    public ModelAndView insertResultRegistProc(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {
        
        LOGGER.info("insertResultRegistProc==============in");
        ModelAndView mav = new ModelAndView("jsonView");

        try{
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());
            bsnsBasicInfoVO.setDept(loginInfoVO.getDeptcode());
            
            //사업등록과 별도의 탭이지만 동일 화면에 같은 오브젝트명으로 존재할 경우 오류가 발생하기 때문에 
            //별도의 오브젝트명으로 설정후 후속 처리시 원래 사용하는 오브젝트에 값을 설정한다.
            //사업명
            if(StringUtil.notEmpty(bsnsBasicInfoVO.getBizTitleR())){
                bsnsBasicInfoVO.setBizTitle(bsnsBasicInfoVO.getBizTitleR());
            }
            //사업기간 시작 기간
            if(StringUtil.notEmpty(bsnsBasicInfoVO.getBizSdateR())){
                
                bsnsBasicInfoVO.setBizSdate(bsnsBasicInfoVO.getBizSdateR());
            }
            //사업기간 종료 기간
            if(StringUtil.notEmpty(bsnsBasicInfoVO.getBizEdateR())){
                
                bsnsBasicInfoVO.setBizEdate(bsnsBasicInfoVO.getBizEdateR());
            }
            
            //서비스 대분류
            if(StringUtil.notEmpty(bsnsBasicInfoVO.getpIdR())){
                
                bsnsBasicInfoVO.setpId(bsnsBasicInfoVO.getpIdR());
            }
            //서비스 소분류
            if(StringUtil.notEmpty(bsnsBasicInfoVO.getgIdR())){
                
                bsnsBasicInfoVO.setgId(bsnsBasicInfoVO.getgIdR());
            }
            
            //템플레이트 구분값 기본값으로 설정
            bsnsBasicInfoVO.setTemplateGb("1000");
            int ret = 0;
            
            //사업결과등록 신규 등록 처리
            ret = bsnsreqstinqireService.insertResultRegistProc(multiRequest, bsnsBasicInfoVO);
            
        
            if(ret > 0){
                mav.addObject("success", true);
                mav.addObject("bizSeq", ret);
                mav.addObject("okMsg", "등록 되었습니다.");
    
            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", "등록에 실패했습니다.");
            }
        } catch (NullPointerException e) {
            LOGGER.error("updateBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("insertBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }
    
    //사업결과등록 - 기존 페이지 리스트검색
    /**
     * <pre>
     * 개요 : [사업결과등록 - 기존] 페이지 리스트검색
     * </pre>
     * @Method Name : selectResultRegistList
     * @author : Administrator
     * @date : 2017. 10. 24.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */ 	
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/selectResultRegistList.do")
    public ModelAndView selectResultRegistList(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {
        
        ModelAndView mav = new ModelAndView("jsonView");
        
        try{
            
            PagingUtil pagingUtil = new PagingUtil();
            PaginationInfo paginationInfo = pagingUtil.setValue(bsnsReqDataVO);
            
            String schDept = bsnsReqDataVO.getSchDept();
            
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            
            //소속부서
            if("0".equals(schDept)){
                
                bsnsReqDataVO.setSchDeptCd(loginInfoVO.getDeptcode());
                
            } else if("2".equals(schDept)){ // 본인
                
                bsnsReqDataVO.setUserId(loginInfoVO.getUserid());
                
            }
            
            bsnsReqDataVO.setSchBizStatusList(bsnsReqDataVO.getSchBizStatus().split(","));
            
            List<EgovMap> bsnsreqstinqireList = bsnsreqstinqireService.selectBsnsreqstinqireList(bsnsReqDataVO);
            int totCnt = bsnsreqstinqireService.selectBsnsreqstinqireListCount(bsnsReqDataVO);
            paginationInfo.setTotalRecordCount(totCnt);
            mav.addObject("paginationInfo", paginationInfo);
            mav.addObject("pagingHtml", pagingUtil.getPagingHtml(paginationInfo, "image", "goSearch"));
            
            if(bsnsreqstinqireList.size() > 0){
                mav.addObject("success", true);
                mav.addObject("resultList", bsnsreqstinqireList);
            }
            
        } catch (NullPointerException e) {
            LOGGER.error("selectResultRegistList() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("selectResultRegistList() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

    return mav;
    }
    
    /**
     * <pre>
     * 개요 : 사업신청 상세 조회
     * </pre>
     * @Method Name : bsnsreqstinqireDetail
     * @author : Administrator
     * @date : 2017. 8. 24.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetail.do")
    public String bsnsreqstinqireDetail(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsReqDataVO.setUserId(loginInfoVO.getUserid());
        bsnsReqDataVO.setSchDeptCd(loginInfoVO.getDeptcode());

        LOGGER.info("getPageIndex======"+bsnsReqDataVO.getPageIndex());

        //데이터 정렬순서를 최신 등록 데이터순으로
        bsnsReqDataVO.setOrder("ID");

        // 편집형 신청서 템플릿 조회
        //1.전체
        List<DkMap> templateList = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //2.고객DB
        bsnsReqDataVO.setTplGubun("1");
        List<DkMap> templateListDB = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //3.부서별
        bsnsReqDataVO.setTplGubun("2");
        List<DkMap> templateListDept = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
        //4.개인별
        bsnsReqDataVO.setTplGubun("3");
        List<DkMap> templateListMember = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);

        // 편집형 신청서 항목 조회
        //1.전체
        List<EgovMap> bizAppItemList = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //2.고객DB
        bsnsReqDataVO.setItemGubun("1");
        List<EgovMap> bizAppItemListDB = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //3.부서별
        bsnsReqDataVO.setItemGubun("2");
        List<EgovMap> bizAppItemListDept = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
        //4.개인별
        bsnsReqDataVO.setItemGubun("3");
        List<EgovMap> bizAppItemListMember = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);

        // 사업소개 템플릿 목록 조회
        List<DkMap> bizIntroTemplateList = bsnsreqstinqireService.selectBizIntroTemplateList(bsnsReqDataVO);

        //사업신청 상세 정보
        List<DkMap> detailMapList = bsnsreqstinqireService.selectBsnsreqstinqireDetail(bsnsReqDataVO);

        DkMap detailMap = detailMapList.get(0);

        //사업신청 상세 정보 건수
        int bizAppCnt = bsnsreqstinqireService.selectBsnsreqstinqireDetailCount(bsnsReqDataVO);

        //지부코드 리스트
        List<EgovMap> jibuCdList = bsnsreqstinqireService.selectjibuInfoList(bsnsReqDataVO);



        String fileName1 = "";
        String fileName2 = "";
        String fileName3 = "";
        String fileName4 = "";
        String fileName5 = "";
        String fileName6 = "";
        String fileName7 = "";

        if (StringUtil.notEmpty(detailMap)){

            /* 팝업링크 키생성 */
            String ariaKey = "SDCITeGovFrameworkKitaEncryptionKey";
            Aria aria = new Aria(ariaKey);

            //매핑용 링크키 생성 및 설정
            detailMap.put("bizSeqariaKey",aria.Encrypt(detailMap.get("bizSeq").toString()));

            //레포트컨텐츠 화면 표시용 형식으로 편집
            String rcStatus = (String) detailMap.get("reportContentStatus");
            String reportContent = (String) detailMap.get("reportContent");

            if (!"1".equals(rcStatus)) {
                reportContent = reportContent.replaceAll("\"","\'");
                reportContent = reportContent.replaceAll("\r\n","\\\\\\n");

                detailMap.put("reportContent", reportContent);
            }

            //첨부파일명 화면 표시용 형식으로 편집
            fileName1 = (String) detailMap.get("fileName1");
            fileName2 = (String) detailMap.get("fileName2");
            fileName3 = (String) detailMap.get("fileName3");
            fileName4 = (String) detailMap.get("fileName4");
            fileName5 = (String) detailMap.get("fileName5");
            fileName6 = (String) detailMap.get("fileName6");
            fileName7 = (String) detailMap.get("fileName7");

            if( StringUtil.notEmpty(fileName1) && fileName1.lastIndexOf("\\") > -1 ) {
                fileName1 = fileName1.substring((fileName1.lastIndexOf("\\")+1), fileName1.length());
            }
            if( StringUtil.notEmpty(fileName2) && fileName2.lastIndexOf("\\") > -1 ) {
                fileName2 = fileName2.substring((fileName2.lastIndexOf("\\")+1), fileName2.length());
            }
            if( StringUtil.notEmpty(fileName3) && fileName3.lastIndexOf("\\") > -1 ) {
                fileName3 = fileName3.substring((fileName3.lastIndexOf("\\")+1), fileName3.length());
            }
            if( StringUtil.notEmpty(fileName4) && fileName4.lastIndexOf("\\") > -1 ) {
                fileName4 = fileName4.substring((fileName4.lastIndexOf("\\")+1), fileName4.length());
            }
            if( StringUtil.notEmpty(fileName5) && fileName5.lastIndexOf("\\") > -1 ) {
                fileName5 = fileName5.substring((fileName5.lastIndexOf("\\")+1), fileName5.length());
            }
            if( StringUtil.notEmpty(fileName6) && fileName6.lastIndexOf("\\") > -1 ) {
                fileName6 = fileName6.substring((fileName6.lastIndexOf("\\")+1), fileName6.length());
            }
            if( StringUtil.notEmpty(fileName7) && fileName7.lastIndexOf("\\") > -1 ) {
                fileName7 = fileName7.substring((fileName7.lastIndexOf("\\")+1), fileName7.length());
            }

            detailMap.put("fileName1",fileName1);
            detailMap.put("fileName2",fileName2);
            detailMap.put("fileName3",fileName3);
            detailMap.put("fileName4",fileName4);
            detailMap.put("fileName5",fileName5);
            detailMap.put("fileName6",fileName6);
            detailMap.put("fileName7",fileName7);

            String createId = (String) detailMap.get("createId");
            String userId  = loginInfoVO.getUserid();
            String authCode = loginInfoVO.getAuthgcode();

            //수정권한 설정
            if("008".equals(authCode) || userId.equals(createId)) {
                detailMap.put("modAuth",true);
            } else {
                detailMap.put("modAuth",false);
            }

        }
        //String tMenuCode = "800";

        model.addAttribute("tMenuCode", "800");
        model.addAttribute("templateList", templateList);
        model.addAttribute("templateListDB", templateListDB);
        model.addAttribute("templateListDept", templateListDept);
        model.addAttribute("templateListMember", templateListMember);

        model.addAttribute("bizAppItemList", bizAppItemList);
        model.addAttribute("bizAppItemListDB", bizAppItemListDB);
        model.addAttribute("bizAppItemListDept", bizAppItemListDept);
        model.addAttribute("bizAppItemListMember", bizAppItemListMember);

        model.addAttribute("bizIntroTemplateList", bizIntroTemplateList);

        model.addAttribute("detailVO", detailMap);
        model.addAttribute("bizAppCnt", bizAppCnt);
        model.addAttribute("jibuCdList", jibuCdList);

        model.addAttribute("reqDataVO", bsnsReqDataVO);

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetail";

    }






    /**
     * <pre>
     * 개요 : 신청항목설정의 템플릿,항목 리스트의 재조회 처리
     * </pre>
     * @Method Name : getTemplateItemInfo
     * @author : Administrator
     * @date : 2017. 9. 21.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/getTemplateItemInfo.do")
    public ModelAndView getTemplateItemInfo(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

      /*
        tabType : tabType,
        tabNo : tabNo,
        userId : userId,
        deptCd : deptCd,
        order : order
        */

        if(bsnsReqDataVO.getTabType().equals("t")){
        // 편집형 신청서 템플릿 조회

            if(bsnsReqDataVO.getTabNo().equals("1")){
                //1.전체
                List<DkMap> templateList = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
                model.addAttribute("resultList", templateList);

            } else if(bsnsReqDataVO.getTabNo().equals("2")){
                //2.고객DB
                bsnsReqDataVO.setTplGubun("1");
                List<DkMap> templateListDB = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
                model.addAttribute("resultList", templateListDB);

            }else if (bsnsReqDataVO.getTabNo().equals("3")){
              //3.부서별
                bsnsReqDataVO.setTplGubun("2");
                List<DkMap> templateListDept = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
                model.addAttribute("resultList", templateListDept);

            }else if (bsnsReqDataVO.getTabNo().equals("4")){
                //4.개인별
                bsnsReqDataVO.setTplGubun("3");
                List<DkMap> templateListMember = bsnsreqstinqireService.selectBizAppTemplateList(bsnsReqDataVO);
                model.addAttribute("resultList", templateListMember);

            }

        }else if(bsnsReqDataVO.getTabType().equals("i")){
        // 편집형 신청서 항목 조회

            if (bsnsReqDataVO.getTabNo().equals("1")){
                //1.전체
                  List<EgovMap> bizAppItemList = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
                  model.addAttribute("resultList", bizAppItemList);
              } else if(bsnsReqDataVO.getTabNo().equals("2")){
              //2.고객DB
                bsnsReqDataVO.setItemGubun("1");
                List<EgovMap> bizAppItemListDB = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
                model.addAttribute("resultList", bizAppItemListDB);

            }else if (bsnsReqDataVO.getTabNo().equals("3")){
                //3.부서별
                bsnsReqDataVO.setItemGubun("2");
                List<EgovMap> bizAppItemListDept = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
                model.addAttribute("resultList", bizAppItemListDept);

            }else if (bsnsReqDataVO.getTabNo().equals("4")){
                //4.개인별
                bsnsReqDataVO.setItemGubun("3");
                List<EgovMap> bizAppItemListMember = bsnsreqstinqireService.selectBizAppItemList(bsnsReqDataVO);
                model.addAttribute("resultList", bizAppItemListMember);

            }
        }

        return mav;
    }

    /**
     * <pre>
     * 개요 : 편집형 신청서 항목 등록
     * </pre>
     * @Method Name : insertBizAppItem
     * @author : Administrator
     * @date : 2017. 9. 25.
     * @param bizAppItemVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertBizAppItem.do")
    public ModelAndView insertBizAppItem(@ModelAttribute("bizAppItemVO") BizAppItemVO bizAppItemVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        int result = bsnsreqstinqireService.insertBizAppItem(bizAppItemVO);
        if(result == 1){

            mav.addObject("success", true);
        }else {
          //실패 처리
            mav.addObject("success", false);
            mav.addObject("errMsg", "항목 등록에 실패하였습니다.");
        }
        return mav;

    }

    /**
     * <pre>
     * 개요 : 편집형 신청서 항목 삭제
     * </pre>
     * @Method Name : deleteBizAppItem
     * @author : Administrator
     * @date : 2017. 9. 25.
     * @param bizAppItemVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/deleteBizAppItem.do")
    public ModelAndView deleteBizAppItem(@ModelAttribute("bizAppItemVO") BizAppItemVO bizAppItemVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        int result = bsnsreqstinqireService.deleteBizAppItem(bizAppItemVO);
        if(result == 1){

            mav.addObject("success", true);
        }else {
          //실패 처리
            mav.addObject("success", false);
            mav.addObject("errMsg", "항목 삭제에 실패하였습니다.");
        }
        return mav;

    }


    /**
     * <pre>
     * 개요 : 편집형 신청서 템플릿 등록
     * </pre>
     * @Method Name : insertBizAppTemplate
     * @author : Administrator
     * @date : 2017. 9. 25.
     * @param bizAppItemVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertBizAppTemplate.do")
    public ModelAndView insertBizAppTemplate(@ModelAttribute("bizAppTemplateVO") BizAppTemplateVO bizAppTemplateVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        int result = bsnsreqstinqireService.insertBizAppTemplate(bizAppTemplateVO);
        if(result == 1){

            mav.addObject("success", true);
        }else {
          //실패 처리
            mav.addObject("success", false);
            mav.addObject("errMsg", "템플릿 등록에 실패하였습니다.");
        }

        return mav;

    }

    /**
     * <pre>
     * 개요 : 편집형 신청서 템플릿 삭제
     * </pre>
     * @Method Name : deleteBizAppTemplate
     * @author : Administrator
     * @date : 2017. 9. 25.
     * @param bizAppItemVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/deleteBizAppTemplate.do")
    public ModelAndView deleteBizAppTemplate(@ModelAttribute("bizAppTemplateVO") BizAppTemplateVO bizAppTemplateVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        int result = bsnsreqstinqireService.deleteBizAppTemplate(bizAppTemplateVO);
        if(result == 1){

            mav.addObject("success", true);
        }else {
          //실패 처리
            mav.addObject("success", false);
            mav.addObject("errMsg", "템플릿 삭제에 실패하였습니다.");
        }

        return mav;

    }




    /**
     * <pre>
     * 개요 : 에디터 초기 리포트 정보
     * </pre>
     * @Method Name : getReportContent
     * @author : Administrator
     * @date : 2017. 9. 8.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/getReportContent.do")
    public ModelAndView getReportContent(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        //사업소개 템플릿 조회
        List<DkMap> detailMapList = bsnsreqstinqireService.selectBsnsreqstinqireDetail(bsnsReqDataVO);

        model.addAttribute("resultList", detailMapList);

        return mav;
    }



    /**
     * <pre>
     * 개요 : 에디터 템플릿 선택시  조회
     * </pre>
     * @Method Name : getIntroTemplateInfo
     * @author : Administrator
     * @date : 2017. 9. 8.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/getIntroTemplateInfo.do")
    public ModelAndView getIntroTemplateInfo(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        // 사업소개 템플릿 목록 조회
        List<DkMap> bizIntroTemplateList = bsnsreqstinqireService.selectBizIntroTemplateList(bsnsReqDataVO);

        model.addAttribute("resultList", bizIntroTemplateList);

        return mav;
    }
    /**
     * <pre>
     * 개요 : 신청자수, 참가자수 클릭시  사업신청자 조회
     * </pre>
     * @Method Name : bsnsreqstinqireApplcntList
     * @author : Administrator
     * @date : 2017. 8. 25.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntList.do")
    public String bsnsreqstinqireApplcntList(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {


        PagingUtil pagingUtil = new PagingUtil();
        PaginationInfo applPaginationInfo = pagingUtil.setValue(bsnsReqDataVO);

        PaginationInfo mktPaginationInfo = pagingUtil.setValue(bsnsReqDataVO);

        // 사업개요 조회
        List<DkMap> detailMapList = bsnsreqstinqireService.selectBsnsreqstinqireDetail(bsnsReqDataVO);
        DkMap detailMap = detailMapList.get(0);

        //사업신청자목록 진행 프로세스 조회
        List<Map<String, Map<String,String>>> listTmCustomer = bsnsreqstinqireService.listIntegratedBiz(bsnsReqDataVO);

       // List<EgovMap> bsnsApplcntList = bsnsreqstinqireService.selectBsnsreqstinqireApplcntList(bsnsReqDataVO);

       // List<EgovMap> bsnsMktList = bsnsreqstinqireService.selectBsnsreqstinqireMktList(bsnsReqDataVO);

       // model.addAttribute("applResultList", bsnsApplcntList);
       // model.addAttribute("mktResultList", bsnsMktList);

       // int applTotCnt = bsnsreqstinqireService.selectBsnsreqstinqireApplcntListCount(bsnsReqDataVO);
       // int mktTotCnt = bsnsreqstinqireService.selectBsnsreqstinqireMktListCount(bsnsReqDataVO);

        //applPaginationInfo.setTotalRecordCount(applTotCnt);
        //mktPaginationInfo.setTotalRecordCount(mktTotCnt);


        model.addAttribute("applPaginationInfo", applPaginationInfo);
        model.addAttribute("mktPaginationInfo", mktPaginationInfo);
        model.addAttribute("reqDataVO", bsnsReqDataVO);


        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntList";
    }

  //마케팅실행 버튼    /kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireMarktexecut.do
    /**
     * <pre>
     * 개요 :
     * </pre>
     * @Method Name : bsnsreqstinqireMarktexecut
     * @author : Administrator
     * @date : 2017. 8. 25.
     * @param bsnsReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireMarktexecut.do")
    public String bsnsreqstinqireMarktexecut(@ModelAttribute("bsnsReqDataVO") BsnsReqDataVO bsnsReqDataVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        PagingUtil pagingUtil = new PagingUtil();
        PaginationInfo paginationInfo = pagingUtil.setValue(bsnsReqDataVO);
        LOGGER.debug(""+paginationInfo.toString());

        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireMarktexecut";
    }




//    /kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireUpdt.do

    /**
     * <pre>
     * 개요 : 사업상세 정보 갱신 전처리 프로세스
     * </pre>
     * @Method Name : insertBizAppProv
     * @author : Administrator
     * @date : 2017. 9. 12.
     * @param multiRequest
     * @param bsnsreqstinqireVO
     * @param model
     * @param request
     * @param response
     * @return ModelAndView
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertBizAppProv.do")
    public ModelAndView insertBizAppProv(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");
        try{
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());
            bsnsBasicInfoVO.setDept(loginInfoVO.getDeptcode());

            System.out.println("loginInfoVO.getDeptcode()================== : "+loginInfoVO.getDeptcode());
            //작성자 IP
            bsnsBasicInfoVO.setUserIp(request.getRemoteAddr());
            int ret = 0;
            Map<String, MultipartFile> filesMap = multiRequest.getFileMap();
            if (!filesMap.isEmpty()) {
                LOGGER.info("==================filesMap not Emplty================="+filesMap.size());
            }else{
                LOGGER.info("==================filesMap Emplty================="+filesMap.size());
            }

            //사업신청관리 템프 테이블 등록이 성공하면 반환받은 시퀀스값을 리턴한다.
            ret = bsnsreqstinqireService.cmmBizAppProc(multiRequest, bsnsBasicInfoVO);

            System.out.println("BIZSEQPROV==================ret : "+ret);
            //ret = bsnsreqstinqireService.insertBizAppProv(bsnsBasicInfoVO);

            if(ret > 0){
                mav.addObject("success", true);
                mav.addObject("bizSeqProv", ret);
            //    LOGGER.info("mav.getView()================== : "+mav.getView());
             //   LOGGER.info("mav.getViewName()================== : "+mav.getViewName());

            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", "저장에 실패했습니다.");
            }
        } catch (NullPointerException e) {
            LOGGER.error("insertBizAppProv() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
           LOGGER.error("insertBizAppProv() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }



    /**
     * <pre>
     * 개요 : 사업상세 정보 갱신 프로세스
     * </pre>
     * @Method Name : updateBizAppProc
     * @author : Administrator
     * @date : 2017. 10. 11.
     * @param multiRequest
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/updateBizAppProc.do")
    public ModelAndView updateBizAppProc(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        try{
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());
            bsnsBasicInfoVO.setDept(loginInfoVO.getDeptcode());
            String bizTitle = bsnsBasicInfoVO.getBizTitle();
            int ret = 0;

            //사업신청관리 갱신 결과값(BIZ_SEQ)을 반환 받는다.
            ret = bsnsreqstinqireService.cmmBizAppProc(multiRequest, bsnsBasicInfoVO);

            if(ret > 0){
                mav.addObject("success", true);
                mav.addObject("bizSeq", ret);
                mav.addObject("bizTitle", bizTitle);
                mav.addObject("okMsg", "갱신 되었습니다.");

            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", "갱신에 실패했습니다.");
            }
        } catch (NullPointerException e) {
            LOGGER.error("updateBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("updateBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }


    /**
     * <pre>
     * 개요 : 사업상세 정보 삭제 프로세스
     * </pre>
     * @Method Name : deleteBizAppProc
     * @author : Administrator
     * @date : 2017. 10. 11.
     * @param multiRequest
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/deleteBizAppProc.do")
    public ModelAndView deleteBizAppProc(MultipartHttpServletRequest multiRequest,@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO,
            ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        try{
            LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
            bsnsBasicInfoVO.setUserId(loginInfoVO.getUserid());
            bsnsBasicInfoVO.setDept(loginInfoVO.getDeptcode());

            int ret = 0;

            //사업신청관리 삭제 결과값을 반환 받는다.
            ret = bsnsreqstinqireService.cmmBizAppProc(multiRequest, bsnsBasicInfoVO);

            if(ret > 0){
                mav.addObject("success", true);
            }else{
                //실패 처리
                mav.addObject("success", false);
                mav.addObject("errMsg", "삭제에 실패했습니다.");
            }
        } catch (NullPointerException e) {
            LOGGER.error("deleteBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("updateBizAppProc() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }

        return mav;
    }




    /**
     * <pre>
     * 개요 : 사업신청관리 정보 등록/갱신 전처리 팝업 호출
     * </pre>
     * @Method Name : doSaveOpenPopup
     * @author : Administrator
     * @date : 2017. 10. 11.
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/doSaveOpenPopup.do")
    public String doSaveOpenPopup(@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {

        DkMap bizMstProvMap = bsnsreqstinqireService.selectBizAppViewProv(bsnsBasicInfoVO);

        // 외부 사이트에서 신청서 신청시 폰트,이미지 파일경로 설정을 위해 도메인정보 추가
        String reportContent = bizMstProvMap.get("reportContent").toString();

        String domain = propertiesService.getString("kita.crm.bizTemplate.url");

        /*이미지 경로가 풀경로로 변경되어서 불필요
         reportContent = reportContent.replace("/font/",domain+"/font/");
        reportContent = reportContent.replace("/images/",domain+"/images/");
        */

        bizMstProvMap.put("reportContent", reportContent);

        BsnsReqDataVO bsnsReqDataVO = new BsnsReqDataVO();
        //지부코드 리스트
        List<EgovMap> jibuCdList = bsnsreqstinqireService.selectjibuInfoList(bsnsReqDataVO);


        model.addAttribute("bizMstProvVO", bizMstProvMap);
        model.addAttribute("bsnsBasicInfoVO", bsnsBasicInfoVO);
        model.addAttribute("jibuCdList", jibuCdList);


        return "/kita/bsnsreqstmanage/bsnsreqstmanage/doSaveOpenPopup";
    }

    /**
     * <pre>
     * 개요 : NTIS정보 갱신
     * </pre>
     * @Method Name : insertBizNtis
     * @author : Administrator
     * @date : 2017. 10. 10.
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/insertBizNtis.do")
    public ModelAndView insertBizNtis(@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        int result = bsnsreqstinqireService.insertBizNtis(bsnsBasicInfoVO);
        if(result == 1){

            mav.addObject("success", true);
        }else {
          //실패 처리
            mav.addObject("success", false);
            mav.addObject("errMsg", "등록에 실패하였습니다.");
        }

        return mav;

    }

    /**
     * <pre>
     * 개요 : NTIS정보 조회
     * </pre>
     * @Method Name : selectBizNtis
     * @author : Administrator
     * @date : 2017. 10. 10.
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/selectBizNtis.do")
    public ModelAndView selectBizNtis(@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        //NTIS 정보 취득
        List<DkMap> ntisMapList = bsnsreqstinqireService.selectBizNtis(bsnsBasicInfoVO);

        model.addAttribute("resultList", ntisMapList);

        return mav;
    }


    /**
     * <pre>
     * 개요 : 사업소개 템플릿 이미지파일로 변환 처리
     * </pre>
     * @Method Name : getHtmlImage
     * @author : Administrator
     * @date : 2017. 10. 11.
     * @param bsnsBasicInfoVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/getHtmlImage.do")
    public ModelAndView getHtmlImage(@ModelAttribute("bsnsBasicInfoVO") BsnsBasicInfoVO bsnsBasicInfoVO
            ,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        String path = propertiesService.getString("kita.crm.htmImage.path");
        Random random = new Random();
        int nNumber = random.nextInt(1000000000);

        SimpleDateFormat sdf = new SimpleDateFormat("yyyymmdd");
        Date date = new Date();
        String currDate = sdf.format(date);

        String filename = currDate+nNumber;


        String imgVal = bsnsBasicInfoVO.getImgVal();
        imgVal = imgVal.replaceAll("data:image/png;base64,", "");

        File dir = new File(path);
        if(!dir.exists()) dir.mkdirs();

        byte[] file = Base64.decodeBase64(imgVal.getBytes());
        ByteArrayInputStream is = new ByteArrayInputStream(file);

        File outFile = new File(path+filename+".png");
        FileOutputStream fos = new FileOutputStream(outFile);

        int ch;
        while ((ch = is.read()) != -1) {
          fos.write(ch);
        }
        fos.close();
        is.close();

        String exist = "Y";
        File existFile = new File(path+filename+".png");
        if (!existFile.exists()) {
            exist = "N";
        }

        mav.addObject("exist", exist);
        mav.addObject("imgInfo", "/upload/"+filename+".png"); //로컬테스트용
        // mav.addObject("imgInfo", path+filename+".png"); //운영용

        return mav;

    }
    /**
     * <pre>
     * 개요 : 사업신청자 상세(기본형)
     * </pre>
     * @Method Name : bsnsreqstinqireDetailBasic
     * @author : Administrator
     * @date : 2017. 10. 25.
     * @param bsnsreqstinqireDetailVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetailBasic.do")
    public String bsnsreqstinqireDetailBasic(@ModelAttribute("bsnsreqstinqireDetailVO") BsnsreqstinqireDetailVO bsnsreqstinqireDetailVO, ModelMap model, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
        
        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsreqstinqireDetailVO.setUserId(loginInfoVO.getUserid());

        String contactCd1 = "";
        String contactCd2 = "";
        String contactCd3 = "";
        String contactCd4 = "";
        String contactCd5 = "";
        String contactCd6 = "";
        String contactCd7 = "";
        String bizAppData = "";
        
        EgovMap rsBizInfo = bsnsreqstinqireService.getBizAppView(bsnsreqstinqireDetailVO.getBizSeq());
        List<Map> rsBizAppItemList = bsnsreqstinqireService.getBizApplicantItemView(bsnsreqstinqireDetailVO.getAppSeq());
        Map resultValue = bsnsreqstinqireService.getBizApplicantView(bsnsreqstinqireDetailVO);
        Map resultValueSub = bsnsreqstinqireService.getBizApplicantViewSub(bsnsreqstinqireDetailVO.getAppSeq());
        //EgovMap resultValueAppConsult = bsnsreqstinqireService.getBizApplicantView(bsnsreqstinqireDetailVO);
        List<EgovMap> resultList = bsnsreqstinqireService.getBizAppMarketingList(bsnsreqstinqireDetailVO);
        
        //if("Y".equals(rsBizInfo.get("editTypeYn"))){
            Iterator<Map.Entry> fkeys = resultValue.entrySet().iterator();
            while( fkeys.hasNext() ){
                Map.Entry entry= fkeys.next();
                String col = entry.getKey().toString();
                if(resultValue.get(col)!=null)
                    bizAppData += col + ": '" + resultValue.get(col).toString().replace("\r", "").replace("\n", "").replace("'","′").replace("\\","＼＼")  + "'";
                String val = "";
                if(resultValue.get(col)!=null) val =  resultValue.get(col).toString().replace("\r", "").replace("\n", "").replace("'","′").replace("\\","＼＼");
                if(col.equals("CONTACT_CD1") && val.equals("1")) contactCd1 = " checked ";
                if(col.equals("CONTACT_CD2") && val.equals("1")) contactCd2 = " checked ";
                if(col.equals("CONTACT_CD3") && val.equals("1")) contactCd3 = " checked ";
                if(col.equals("CONTACT_CD4") && val.equals("1")) contactCd4 = " checked ";
                if(col.equals("CONTACT_CD5") && val.equals("1")) contactCd5 = " checked ";
                if(col.equals("CONTACT_CD6") && val.equals("1")) contactCd6 = " checked ";
                if(col.equals("CONTACT_CD7") && val.equals("1")) contactCd7 = " checked ";
                bizAppData +=",";
            }
            
            if(resultValueSub!= null && resultValueSub.size() > 0){
                fkeys = resultValueSub.entrySet().iterator();
                while( fkeys.hasNext() ){
                    Map.Entry entry= fkeys.next();
                    String col = entry.getKey().toString();
                    String appGubun = "";
                    if(resultValueSub.get("APP_GUBUN")!=null) appGubun = resultValueSub.get("APP_GUBUN").toString();
                    if(resultValueSub.get(col)!=null)
                        bizAppData +="," + col + ": '" + resultValueSub.get(col).toString().replace("\r", "").replace("\n", "").replace("'","′").replace("\\","＼＼")  + "'";
                }
            }
            
            if(rsBizAppItemList.size() > 0){
                for(int row = 0; row < rsBizAppItemList.size(); row++){
                    if(rsBizAppItemList.get(row).get("ITEM_NAME")!=null && rsBizAppItemList.get(row).get("ITEM_VAL")!=null)
                        bizAppData +="," + rsBizAppItemList.get(row).get("ITEM_NAME").toString() + ": '" + rsBizAppItemList.get(row).get("ITEM_VAL").toString().replace("\r", "").replace("\n", "").replace("'","′").replace("\\","＼＼") + "'";
                }
            }
            
            bsnsreqstinqireDetailVO.setBizAppData(bizAppData);
            
            String APP_HTML = "";
            if(rsBizInfo.get("appHtml")!=null)
                APP_HTML = rsBizInfo.get("appHtml").toString();
            APP_HTML = APP_HTML.replaceAll("name=contactCd1","name=CONTACT_CD1"+contactCd1);
            APP_HTML = APP_HTML.replaceAll("name=contactCd2","name=CONTACT_CD2"+contactCd2);
            APP_HTML = APP_HTML.replaceAll("name=contactCd3","name=CONTACT_CD3"+contactCd3);
            APP_HTML = APP_HTML.replaceAll("name=contactCd4","name=CONTACT_CD4"+contactCd4);
            APP_HTML = APP_HTML.replaceAll("name=contactCd5","name=CONTACT_CD5"+contactCd5);
            APP_HTML = APP_HTML.replaceAll("name=contactCd6","name=CONTACT_CD6"+contactCd6);
            APP_HTML = APP_HTML.replaceAll("name=contactCd7","name=CONTACT_CD7"+contactCd7);
            

            APP_HTML = APP_HTML.replaceAll("name=\"contactCd1\"","name=CONTACT_CD1"+contactCd1);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd2\"","name=CONTACT_CD2"+contactCd2);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd3\"","name=CONTACT_CD3"+contactCd3);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd4\"","name=CONTACT_CD4"+contactCd4);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd5\"","name=CONTACT_CD5"+contactCd5);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd6\"","name=CONTACT_CD6"+contactCd6);
            APP_HTML = APP_HTML.replaceAll("name=\"contactCd7\"","name=CONTACT_CD7"+contactCd7);
            bsnsreqstinqireDetailVO.setAppHtml(APP_HTML);
       // }
            bsnsreqstinqireDetailVO.setEditTypeYn("Y");
        model.addAttribute("rsBizInfo", rsBizInfo);
        model.addAttribute("rsBizAppItemList", rsBizAppItemList);
        model.addAttribute("resultValue", resultValue);
        model.addAttribute("resultValueSub", resultValueSub);
        //model.addAttribute("resultValueAppConsult", resultValueAppConsult);
        model.addAttribute("resultList", resultList);
        model.addAttribute("reqDataVO", bsnsreqstinqireDetailVO);
        
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetailBasic";
    }
    /**
     * <pre>
     * 개요 : 사업신청자 상세(기본형)
     * </pre>
     * @Method Name : bsnsreqstinqireDetailBasic
     * @author : Administrator
     * @date : 2017. 10. 25.
     * @param bsnsreqstinqireDetailVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value="/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetailBasicUpdateProc.do")
    public String bsnsreqstinqireDetailBasicUpdateProc(MultipartHttpServletRequest multiRequest, ModelMap model, HttpServletRequest request, HttpServletResponse response) throws Exception {
        
        BsnsreqstinqireDetailVO bsnsreqstinqireDetailVO = new BsnsreqstinqireDetailVO();
        
        Map<String, String> requestParamMap = new HashMap<String, String>();
        
        Enumeration enumeration = request.getParameterNames();
        while (enumeration.hasMoreElements()) {
            String parameterName = (String) enumeration.nextElement();
            BeanUtils.copyProperty(bsnsreqstinqireDetailVO, CamelUtil.convert2CamelCase((String)parameterName), request.getParameter(parameterName));
            if(parameterName.startsWith("ITEM_")) 
                requestParamMap.put(parameterName, request.getParameter(parameterName));
        }
        
        //세션에서 로그인 정보 취득
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        bsnsreqstinqireDetailVO.setUserId(loginInfoVO.getUserid());

        int rVal = 0; 

        String downloadDirTemp = "";
        String downloadDir = "";
        String attachFileName1 = "";
        String attachFileName2 = "";
        String attachFileName3 = "";
        String attachFileName4 = "";
        String attachFileName5 = "";
        String attachFileName6 = "";
        String attachFileName7 = "";

        FileInputStream fisConf= null;
        
        try{
            downloadDir = propertiesService.getString("kita.crm.serviceFile.path");
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try{ fisConf.close(); }catch(Exception ee){}
        }

        List<FileVO> fileList = commonMnmtService.saveBsnsreqstregistAtchFiles(multiRequest, downloadDir);
        if(fileList!=null && fileList.size()>0){
            for (FileVO fileVo : fileList) {
                fileVo.getAtchFileNm();
                FileItem fileItem = fileVo.getFileItem();
                if(fileItem.isFormField()){
                    if(LOGGER.isDebugEnabled()) {
                        LOGGER.info("fileItem.getFieldName() : " + fileItem.getFieldName());
                        LOGGER.info("fileItem.getFieldName(EUC-KR : " + fileItem.getString("EUC-KR"));
                    }
                    requestParamMap.put(fileItem.getFieldName(), fileItem.getString("EUC-KR"));
                    //reqDataValue.put(fileItem.getFieldName(), fileItem.getString("EUC-KR"));
                    
                } else {
                    if(fileItem.getSize()>0){
                        String fileName = fileItem.getName();
                        String fieldName=fileItem.getFieldName();
                       
                        if ("file_upload01".equals(fieldName)){
                            attachFileName1 = fileName;
                        } else if ("file_upload02".equals(fieldName)){
                            attachFileName2 = fileName;
                        } else if ("file_upload03".equals(fieldName)){
                            attachFileName3 = fileName;
                        } else if ("file_upload04".equals(fieldName)){
                            attachFileName4 = fileName;
                        } else if ("file_upload05".equals(fieldName)){
                            attachFileName5 = fileName;
                        } else if ("file_upload06".equals(fieldName)){
                            attachFileName6 = fileName;
                        } else if ("file_upload07".equals(fieldName)){
                            attachFileName7 = fileName;
                        }
                    }
                }
            }
        }
        bsnsreqstinqireDetailVO.setDownloadDir(downloadDir);
        bsnsreqstinqireDetailVO.setAttachFileName1(attachFileName1);
        bsnsreqstinqireDetailVO.setAttachFileName2(attachFileName2);
        bsnsreqstinqireDetailVO.setAttachFileName3(attachFileName3);
        bsnsreqstinqireDetailVO.setAttachFileName4(attachFileName4);
        bsnsreqstinqireDetailVO.setAttachFileName5(attachFileName5);
        bsnsreqstinqireDetailVO.setAttachFileName6(attachFileName6);
        bsnsreqstinqireDetailVO.setAttachFileName7(attachFileName7);

        rVal = bsnsreqstinqireService.updateBizApplication2(bsnsreqstinqireDetailVO);
        bsnsreqstinqireDetailVO.setrVal(String.valueOf(rVal));
        model.addAttribute("reqDataVO", bsnsreqstinqireDetailVO);
        
        return "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetailBasicUpdateProc";
    }
    /**
     * <pre>
     * 개요 : 엑셀다운로드
     * </pre>
     * @Method Name : bsnsreqstinqireDetailBasicExcelDown
     * @author : wonck
     * @date : 2017. 8. 30.
     * @param cstmrReqDataVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireDetailBasicExcelDown.do")
    public ModelAndView bsnsreqstinqireDetailBasicExcelDown(@ModelAttribute("bsnsreqstinqireDetailVO") BsnsreqstinqireDetailVO bsnsreqstinqireDetailVO,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");

        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        
        String userId = loginInfoVO.getUserid();
        bsnsreqstinqireDetailVO.setUserId(userId);
        String step = bsnsreqstinqireDetailVO.getStep();
        List<EgovMap> rsValue = null;
        
        if("MT002104".equals(bsnsreqstinqireDetailVO.getMode()))
            rsValue = bsnsreqstinqireService.getBizApplicantExcelList(bsnsreqstinqireDetailVO);
        else
            rsValue = bsnsreqstinqireService.getBizApplicantExcelDetList(bsnsreqstinqireDetailVO.getBizSeq());
        
        String fullPath = drmMngUtil.DRMFilePath();
        
        try{
            File f = new File(fullPath);
            if(f.exists() == false)
            {
               f.mkdirs();
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        
        String excelFileName = "";
        if("MT002108".equals(bsnsreqstinqireDetailVO.getMode()))
            excelFileName = "BizAppCmpLst_" + bsnsreqstinqireDetailVO.getUserId() + "_" + bsnsreqstinqireDetailVO.getBizSeq() + ".xls";
        else if("MT002108forContact".equals(bsnsreqstinqireDetailVO.getMode()))
            excelFileName = "BizAppCmpContLst_" + bsnsreqstinqireDetailVO.getUserId() + "_" + bsnsreqstinqireDetailVO.getBizSeq() + ".xls";
        else
            excelFileName = "BizAppTaLst_" + bsnsreqstinqireDetailVO.getUserId() + "_" + bsnsreqstinqireDetailVO.getBizSeq() + ".xls";
        String realFile = fullPath + excelFileName;
        try{
            WritableWorkbook workbook = Workbook.createWorkbook(new File(realFile)); 
            // create first excel's sheet.
            WritableSheet sheet = null;
            if("MT002108".equals(bsnsreqstinqireDetailVO.getMode()))
                sheet = workbook.createSheet("BizAppCmpLst", 0);
            else if("MT002108forContact".equals(bsnsreqstinqireDetailVO.getMode()))
                sheet = workbook.createSheet("BizAppCmpContLst", 0);
            else
                sheet = workbook.createSheet("BizAppTaLst", 0);
            
            
            jxl.write.WritableCellFormat  fmtHeader= new WritableCellFormat();
            jxl.write.WritableCellFormat  fmtTitle= new WritableCellFormat();
            jxl.write.WritableCellFormat  fmtData= new WritableCellFormat();

            fmtHeader.setBackground(jxl.format.Colour.WHITE);
            fmtTitle.setBorder(jxl.format.Border.ALL,jxl.format.BorderLineStyle.HAIR);
            
            fmtTitle.setBackground(jxl.format.Colour.GRAY_25 );
            fmtTitle.setBorder(jxl.format.Border.ALL,jxl.format.BorderLineStyle.THIN );
            fmtTitle.setAlignment(jxl.format.Alignment.CENTRE);
            
            fmtData.setBackground(jxl.format.Colour.WHITE );
            fmtData.setBorder(jxl.format.Border.ALL,jxl.format.BorderLineStyle.THIN );
            fmtData.setAlignment(jxl.format.Alignment.CENTRE);

            if("MT002104".equals(bsnsreqstinqireDetailVO.getMode()) || "MT002108".equals(bsnsreqstinqireDetailVO.getMode()) || "MT002108forContact".equals(bsnsreqstinqireDetailVO.getMode()))
                sheet.setColumnView(0,14);
            else
                sheet.setColumnView(0,8);
            
            jxl.write.Label label = null;                        
            jxl.write.Blank blank = null;


            int li_row = rsValue.size();
           
            int idx = 0;
            if(!"MT002108".equals(bsnsreqstinqireDetailVO.getMode()) && !"MT002108forContact".equals(bsnsreqstinqireDetailVO.getMode())){
                label = new jxl.write.Label(idx++,0,"No.",fmtTitle);
                sheet.addCell(label);
            }
            if("MT002105".equals(bsnsreqstinqireDetailVO.getMode())){
                
                // 2014.05.15, hjh
                // 엑셀 내 참석여부를 추가하기 위한 step 추가
                if(step.equals("5") || step.equals("6")) {
                    label = new jxl.write.Label(idx++,0,"참석확인", fmtTitle); sheet.addCell(label);
                }
    
                label = new jxl.write.Label(idx++,0,"업종",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"사업자등록번호",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(영문",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자이름",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"핸드폰",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사전화",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"팩스",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"이메일",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사주소",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사유형",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"종업원수",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"매출액",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"무역업번호",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"대표자명",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"종업원수",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"업종",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"홈페이지",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"주소",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"수출실적",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"내수실적",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-성명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-성명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-직위(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-직위(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-전화",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-팩스",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-휴대폰",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-이메일",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자1-여권번호",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-성명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-성명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-직위(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-직위(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-전화",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-팩스",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-휴대폰",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-이메일",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자2-여권번호",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-성명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-성명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-직위(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-직위(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-전화",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-팩스",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-휴대폰",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-이메일",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자3-여권번호",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"통역",fmtTitle);         sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-HS Code",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목설명(국문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목설명(영문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-HS Code",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목설명(국문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목설명(영문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-HS Code",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목명(국문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목명(영문)",fmtTitle);        sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목설명(국문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목설명(영문)",fmtTitle);       sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"희망 바이어 명단",fmtTitle);      sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회비납부",fmtTitle);       sheet.addCell(label);
    
               int intStep = 0;
               if (li_row >0){
                   for (int i=0; i < li_row; i++){
                       intStep =  i+1;
                       
                       idx = 0;
                       
                        label = new jxl.write.Label(idx++,i+1,intStep+"" ,fmtData); sheet.addCell(label);
                        
                       // 2014.05.15, hjh
                       // 엑셀 내 참석여부를 추가하기 위한 step 추가
                        if(step.equals("5") || step.equals("6")) {
                            String attendValue = "";
                            if(rsValue.get(i).get("attendanceOrderNum")!=null)
                                attendValue = rsValue.get(i).get("attendanceOrderNum").toString();
                            if(attendValue.equals("") || attendValue.equals("0"))
                                attendValue = "불참";
                            label = new jxl.write.Label(idx++,i+1,attendValue,fmtData); sheet.addCell(label);
                        }
                    
                        if(rsValue.get(i).get("upjongNm") == null) rsValue.get(i).put("upjongNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("upjongNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("compNo") == null) rsValue.get(i).put("compNo","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("compNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpKorNm") == null) rsValue.get(i).put("corpKorNm","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpEngNm") == null) rsValue.get(i).put("corpEngNm","");
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpEngNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("appNm") == null) rsValue.get(i).put("appNm","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("appNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cellNo") == null) rsValue.get(i).put("cellNo","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cellNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpTel") == null) rsValue.get(i).put("corpTel",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpTel").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax") == null) rsValue.get(i).put("fax",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email") == null) rsValue.get(i).put("email","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpAddress") == null) rsValue.get(i).put("corpAddress","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpAddress").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpType") == null) rsValue.get(i).put("corpType","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpType").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("empCnt") == null) rsValue.get(i).put("empCnt","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("empCnt").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("sales") == null) rsValue.get(i).put("sales","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("sales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpKorNmSub") == null) rsValue.get(i).put("corpKorNmSub","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNmSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpEngNmSub") == null) rsValue.get(i).put("corpEngNmSub",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpEngNmSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("memberId") == null) rsValue.get(i).put("memberId","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("memberId").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("ceoKorNm") == null) rsValue.get(i).put("ceoKorNm","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("ceoKorNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email1") == null) rsValue.get(i).put("email1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("upjongSubNm") == null) rsValue.get(i).put("upjongSubNm","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("upjongSubNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("homepageSub") == null) rsValue.get(i).put("homepageSub","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("homepageSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("address") == null) rsValue.get(i).put("address","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("address").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("exportSales") == null) rsValue.get(i).put("exportSales","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("exportSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("importSales") == null) rsValue.get(i).put("importSales","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("importSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm1") == null) rsValue.get(i).put("korNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm1") == null) rsValue.get(i).put("engNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm2") == null) rsValue.get(i).put("engNm2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm1") == null) rsValue.get(i).put("jikwiEngNm1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel1") == null) rsValue.get(i).put("tel1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax1") == null) rsValue.get(i).put("fax1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell1") == null) rsValue.get(i).put("cell1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email1") == null) rsValue.get(i).put("email1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport1") == null) rsValue.get(i).put("passport1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm2") == null) rsValue.get(i).put("korNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm2") == null) rsValue.get(i).put("engNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm2") == null) rsValue.get(i).put("jikwiKorNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm2") == null) rsValue.get(i).put("jikwiEngNm2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel2") == null) rsValue.get(i).put("tel2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax2") == null) rsValue.get(i).put("fax2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell2") == null) rsValue.get(i).put("cell2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email2") == null) rsValue.get(i).put("email2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport2") == null) rsValue.get(i).put("passport2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm3") == null) rsValue.get(i).put("korNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm3") == null) rsValue.get(i).put("engNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm3") == null) rsValue.get(i).put("jikwiKorNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm3") == null) rsValue.get(i).put("jikwiEngNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel3") == null) rsValue.get(i).put("tel3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax3") == null) rsValue.get(i).put("fax3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell3") == null) rsValue.get(i).put("cell3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email3") == null) rsValue.get(i).put("email3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport3") == null) rsValue.get(i).put("passport3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("translateYn") == null) rsValue.get(i).put("translateYn","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("translateYn").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode1") == null) rsValue.get(i).put("hscode1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm1") == null) rsValue.get(i).put("itemKorNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm1") == null) rsValue.get(i).put("itemEngNm1","");    
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent1") == null) rsValue.get(i).put("itemKorContent1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent1") == null) rsValue.get(i).put("itemEngContent1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode2") == null) rsValue.get(i).put("hscode2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm2") == null) rsValue.get(i).put("itemKorNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm2") == null) rsValue.get(i).put("itemEngNm2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent2") == null) rsValue.get(i).put("itemKorContent2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent2") == null) rsValue.get(i).put("itemEngContent2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode3") == null) rsValue.get(i).put("hscode3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm3") == null) rsValue.get(i).put("itemKorNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm3") == null) rsValue.get(i).put("itemEngNm3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent3") == null) rsValue.get(i).put("itemKorContent3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent3") == null) rsValue.get(i).put("itemEngContent3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("buyerList") == null) rsValue.get(i).put("buyerList","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("buyerList").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("feeCnt") == null) rsValue.get(i).put("feeCnt","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("feeCnt").toString(),fmtData); sheet.addCell(label);

                   }
               } else {
                   label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                   sheet.addCell(label);
               }
            } else if("MT002106".equals(bsnsreqstinqireDetailVO.getMode())){
                // 2014.05.15, hjh
                // 엑셀 내 참석여부를 추가하기 위한 step 추가
                if(step.equals("5") || step.equals("6")) {
                    label = new jxl.write.Label(idx++,0,"참석확인" ,fmtTitle); sheet.addCell(label);
                }
                
                 label = new jxl.write.Label(idx++,0,"업종" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"사업자등록번호",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자이름",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"핸드폰" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사전화" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"팩스" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"이메일" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사주소" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사유형" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"종업원수" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"매출액 " ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회사명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"무역업번호",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"대표자명" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"종업원수" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"업종" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"홈페이지" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"주소" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"수출실적" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"내수실적" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-성명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-성명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-직위(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-직위(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-전화",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-팩스",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-휴대폰",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-이메일",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자1-여권번호",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-성명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-성명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-직위(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-직위(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-전화",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-팩스",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-휴대폰",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-이메일",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자2-여권번호",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-성명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-성명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-직위(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-직위(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-전화",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-팩스",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-휴대폰",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-이메일",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가자3-여권번호",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"통역" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목1-HS Code" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목1-폼목명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목1-폼목명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목1-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목1-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목2-HS Code" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목2-폼목명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목2-폼목명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목2-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목2-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목3-HS Code" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목3-폼목명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목3-폼목명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목3-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"품목3-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"희망 바이어 명단",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"참가목적" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"호텔" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"항공좌석(단체)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"항공좌석(개별)",fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"요청사항" ,fmtTitle); sheet.addCell(label);
                 label = new jxl.write.Label(idx++,0,"회비납부" ,fmtTitle); sheet.addCell(label);
            

                int intStep = 0;
                if (li_row >0){
                    for (int i=0; i < li_row; i++){
                        
                        String strCorpType = "";
                        if(rsValue.get(i).get("corpType")!=null) strCorpType=rsValue.get(i).get("corpType").toString();
                        String strCorpTypeNm = "";
                        
                        if("M".equals(strCorpType)) {
                            strCorpTypeNm = "Manufacture";
                        } else if("T".equals(strCorpType)) {
                            strCorpTypeNm = "Trade Agency";
                        }
                
                        String strTranslate = "";
                        if(rsValue.get(i).get("translateYn")!=null) strTranslate=rsValue.get(i).get("translateYn").toString();
                        String strTranslateNm = "";
                        
                        if("Y".equals(strTranslate)) {
                            strTranslateNm = "예";
                        } else if("N".equals(strTranslate)) {
                            strTranslateNm = "아니오";
                        }
                        
                        String strPPObj = "";
                        if(rsValue.get(i).get("ppObj")!=null) strPPObj=rsValue.get(i).get("ppObj").toString();
                        String strPPObjEtc = "";
                        if(rsValue.get(i).get("ppObjEtc")!=null) strPPObjEtc=rsValue.get(i).get("ppObjEtc").toString();
                        String strPPObjNm = "";
                        
                        if(strPPObj.indexOf("EXP")>-1) {
                            strPPObjNm="수출 ";
                        }
                        if(strPPObj.indexOf("IMP")>-1) {
                            strPPObjNm=strPPObjNm+" 수입 ";
                        }
                        if(strPPObj.indexOf("IVE")>-1) {
                            strPPObjNm=strPPObjNm+" 투자 ";
                        }
                        if(strPPObj.indexOf("ETC")>-1) {
                            strPPObjNm=strPPObjNm+" 기타 ("+strPPObjEtc+")";
                        }
                        

                        intStep =  i+1;
                        
                        idx = 0;
                        
                        label = new jxl.write.Label(idx++,i+1,intStep+"" ,fmtData); sheet.addCell(label);
                        
                        // 2014.05.15, hjh
                        // 엑셀 내 참석여부를 추가하기 위한 step 추가
                        if(step.equals("5") || step.equals("6")) {
                            String attendValue = "";
                            if(rsValue.get(i).get("attendanceOrderNum")!=null) strPPObj=rsValue.get(i).get("attendanceOrderNum").toString();
                            if(attendValue.equals("") || attendValue.equals("0"))
                                attendValue = "불참";
                            label = new jxl.write.Label(idx++,i+1,attendValue,fmtData); sheet.addCell(label);
                        }
                        
                        if(rsValue.get(i).get("upjongNm") == null) rsValue.get(i).put("upjongNm","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("upjongNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("compNo") == null) rsValue.get(i).put("compNo","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("compNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpKorNm") == null) rsValue.get(i).put("corpKorNm","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpEngNm") == null) rsValue.get(i).put("corpEngNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpEngNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("appNm") == null) rsValue.get(i).put("appNm","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("appNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cellNo") == null) rsValue.get(i).put("cellNo","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cellNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpTel") == null) rsValue.get(i).put("corpTel","");
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpTel").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax") == null) rsValue.get(i).put("fax","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email") == null) rsValue.get(i).put("email","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpAddress") == null) rsValue.get(i).put("corpAddress","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpAddress").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strCorpTypeNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("empCnt") == null) rsValue.get(i).put("empCnt","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("empCnt").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("sales") == null) rsValue.get(i).put("sales","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("sales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpKorNmSub") == null) rsValue.get(i).put("corpKorNmSub","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNmSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpEngNmSub") == null) rsValue.get(i).put("corpEngNmSub",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpEngNmSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("memberId") == null) rsValue.get(i).put("memberId","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("memberId").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("ceoKorNm") == null) rsValue.get(i).put("ceoKorNm","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("ceoKorNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email1") == null) rsValue.get(i).put("email1","");    
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("upjongSubNm") == null) rsValue.get(i).put("upjongSubNm","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("upjongSubNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("homepageSub") == null) rsValue.get(i).put("homepageSub","");    
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("homepageSub").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("address") == null) rsValue.get(i).put("address","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("address").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("exportSales") == null) rsValue.get(i).put("exportSales","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("exportSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("importSales") == null) rsValue.get(i).put("importSales","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("importSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm1") == null) rsValue.get(i).put("korNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm1") == null) rsValue.get(i).put("engNm1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm1") == null) rsValue.get(i).put("jikwiKorNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm1") == null) rsValue.get(i).put("jikwiEngNm1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel1") == null) rsValue.get(i).put("tel1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax1") == null) rsValue.get(i).put("fax1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell1") == null) rsValue.get(i).put("cell1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email1") == null) rsValue.get(i).put("email1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport1") == null) rsValue.get(i).put("passport1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm2") == null) rsValue.get(i).put("korNm2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm2") == null) rsValue.get(i).put("engNm2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm2") == null) rsValue.get(i).put("jikwiKorNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm2") == null) rsValue.get(i).put("jikwiEngNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel2") == null) rsValue.get(i).put("tel2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax2") == null) rsValue.get(i).put("fax2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell2") == null) rsValue.get(i).put("cell2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email2") == null) rsValue.get(i).put("email2","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport2") == null) rsValue.get(i).put("passport2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm3") == null) rsValue.get(i).put("korNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm3") == null) rsValue.get(i).put("engNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm3") == null) rsValue.get(i).put("jikwiKorNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm3") == null) rsValue.get(i).put("jikwiEngNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel3") == null) rsValue.get(i).put("tel3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax3") == null) rsValue.get(i).put("fax3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell3") == null) rsValue.get(i).put("cell3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email3") == null) rsValue.get(i).put("email3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport3") == null) rsValue.get(i).put("passport3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport3").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strTranslateNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode1") == null) rsValue.get(i).put("hscode1","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm1") == null) rsValue.get(i).put("itemKorNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm1") == null) rsValue.get(i).put("itemEngNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent1") == null) rsValue.get(i).put("itemKorContent1","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent1") == null) rsValue.get(i).put("itemEngContent1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode2") == null) rsValue.get(i).put("hscode2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm2") == null) rsValue.get(i).put("itemKorNm2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm2") == null) rsValue.get(i).put("itemEngNm2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent2") == null) rsValue.get(i).put("itemKorContent2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent2") == null) rsValue.get(i).put("itemEngContent2","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode3") == null) rsValue.get(i).put("hscode3","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm3") == null) rsValue.get(i).put("itemKorNm3","");
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm3") == null) rsValue.get(i).put("itemEngNm3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent3") == null) rsValue.get(i).put("itemKorContent3","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent3") == null) rsValue.get(i).put("itemEngContent3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("buyerList") == null) rsValue.get(i).put("buyerList","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("buyerList").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strPPObjNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hotelType") == null) rsValue.get(i).put("hotelType","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hotelType").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("airTypeTeam") == null) rsValue.get(i).put("airTypeTeam","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("airTypeTeam").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("airTypePerson") == null) rsValue.get(i).put("airTypePerson",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("airTypePerson").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("reqContent") == null) rsValue.get(i).put("reqContent","");  
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("reqContent").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("feeCnt") == null) rsValue.get(i).put("feeCnt","");   
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("feeCnt").toString(),fmtData); sheet.addCell(label);

                    }
                } else {
                    label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                    sheet.addCell(label);
                }
            } else if("MT002104".equals(bsnsreqstinqireDetailVO.getMode())){
                if(!"Y".equals(bsnsreqstinqireDetailVO.getMtype())){
                    
                   // 2014.05.15, hjh
                   // 엑셀 내 참석여부를 추가하기 위한 step 추가
                   if(step.equals("5") || step.equals("6")) {
                       label = new jxl.write.Label(idx++,0,"참석확인" ,fmtTitle); sheet.addCell(label);
                   }
               
                    label = new jxl.write.Label(idx++,0,"회사구분",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"사업자등록번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회사명/기관명",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"대표자/기관장",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회사전화번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"품목명",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"참가자이름",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"직위",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"주민번호 앞 6자리",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"핸드폰번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"신청일",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"이메일",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"구분",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회비납부",fmtTitle);
                    sheet.addCell(label);

               }else{
                    
                   // 2014.05.15, hjh
                   // 엑셀 내 참석여부를 추가하기 위한 step 추가
                   if(step.equals("5") || step.equals("6")) {
                       label = new jxl.write.Label(idx++,0,"참석확인" ,fmtTitle); sheet.addCell(label);
                   }
                   
                    label = new jxl.write.Label(idx++,0,"회사구분",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"사업자등록번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회사명/기관명",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"대표자/기관장",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회사전화번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"품목명",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"참가자이름",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"직위",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"주민번호 앞 6자리",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"핸드폰번호",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"신청일",fmtTitle);
                    sheet.addCell(label);           
                    label = new jxl.write.Label(idx++,0,"회원구분",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"이메일",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"구분",fmtTitle);
                    sheet.addCell(label);
                    label = new jxl.write.Label(idx++,0,"회비납부",fmtTitle);
                    sheet.addCell(label);
                    
               }
               int intStep =0 ;
               if (li_row >0){
                   for (int i=0; i < li_row; i++){
                       intStep =  i+1;

                       idx = 0;

                       if(!"Y".equals(bsnsreqstinqireDetailVO.getMtype())){                 
                             label = new jxl.write.Label(idx++, i+1, intStep+"" , fmtData);
                             sheet.addCell(label);
                             
                           // 2014.05.15, hjh
                           // 엑셀 내 참석여부를 추가하기 위한 step 추가
                             if(step.equals("5") || step.equals("6")) {
                                 String attendValue = "";
                                 if(rsValue.get(i).get("attendanceOrderNum")!=null)
                                     attendValue = rsValue.get(i).get("attendanceOrderNum").toString();
                                 if(attendValue.equals("") || attendValue.equals("0"))
                                     attendValue = "불참";
                                 label = new jxl.write.Label(idx++,i+1,attendValue,fmtData); sheet.addCell(label);
                             }
                             
                             if(rsValue.get(i).get("userFg") == null) rsValue.get(i).put("userFg",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("userFg").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("compNo") == null) rsValue.get(i).put("compNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("compNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("corpKorNm") == null) rsValue.get(i).put("corpKorNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("ceoNm") == null) rsValue.get(i).put("ceoNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("ceoNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("corpTel") == null) rsValue.get(i).put("corpTel",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpTel").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("prodNm") == null) rsValue.get(i).put("prodNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("prodNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("appNm") == null) rsValue.get(i).put("appNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("appNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("pozNm") == null) rsValue.get(i).put("pozNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("pozNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("personResiNo") == null) rsValue.get(i).put("personResiNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("personResiNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("cellNo") == null) rsValue.get(i).put("cellNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cellNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("createDate") == null) rsValue.get(i).put("createDate",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("createDate").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("email") == null) rsValue.get(i).put("email",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("source") == null) rsValue.get(i).put("source",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("source").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("feeCnt") == null) rsValue.get(i).put("feeCnt",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("feeCnt").toString(),fmtData); sheet.addCell(label);
                 
                         }else{
                               label = new jxl.write.Label(idx++, i+1, intStep+"" , fmtData);
                               sheet.addCell(label);
                               
                             // 2014.05.15, hjh
                             // 엑셀 내 참석여부를 추가하기 위한 step 추가
                             if(step.equals("5") || step.equals("6")) {
                                 String attendValue = "";
                                 if(rsValue.get(i).get("attendanceOrderNum")!=null)
                                     attendValue = rsValue.get(i).get("attendanceOrderNum").toString();
                                 if(attendValue.equals("0"))
                                     attendValue = "불참";
                                 label = new jxl.write.Label(idx++,i+1,attendValue,fmtData); sheet.addCell(label);
                             }
                             
                             if(rsValue.get(i).get("userFg") == null) rsValue.get(i).put("userFg",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("userFg").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("compNo") == null) rsValue.get(i).put("compNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("compNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("corpKorNm") == null) rsValue.get(i).put("corpKorNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("ceoNm") == null) rsValue.get(i).put("ceoNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("ceoNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("corpTel") == null) rsValue.get(i).put("corpTel",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpTel").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("prodNm") == null) rsValue.get(i).put("prodNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("prodNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("appNm") == null) rsValue.get(i).put("appNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("appNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("pozNm") == null) rsValue.get(i).put("pozNm",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("pozNm").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("personResiNo") == null) rsValue.get(i).put("personResiNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("personResiNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("cellNo") == null) rsValue.get(i).put("cellNo",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cellNo").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("createDate") == null) rsValue.get(i).put("createDate",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("createDate").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("mtype") == null) rsValue.get(i).put("mtype",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("mtype").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("email") == null) rsValue.get(i).put("email",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("source") == null) rsValue.get(i).put("source",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("source").toString(),fmtData); sheet.addCell(label);
                             if(rsValue.get(i).get("feeCnt") == null) rsValue.get(i).put("feeCnt",""); 
                             label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("feeCnt").toString(),fmtData); sheet.addCell(label);
                       }
                   }
               } else {
                       label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                       sheet.addCell(label);
               }
            } else if("MT002107".equals(bsnsreqstinqireDetailVO.getMode())){
                // 2014.05.15, hjh
                // 엑셀 내 참석여부를 추가하기 위한 step 추가
                if(step.equals("5") || step.equals("6")) {
                    label = new jxl.write.Label(idx++,0,"참석확인" ,fmtTitle); sheet.addCell(label);
                }        
                label = new jxl.write.Label(idx++,0,"사업자등록번호",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"생년월일",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"담당자 이름",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"담당자 핸드폰",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"담당자 회사전화",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"담당자 팩스",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"담당자 이메일",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"부서" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"직위" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사주소" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회사유형" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"종업원수" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"매출액" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"무역업번호",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"대표자명" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"업종" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"홈페이지" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"주소" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"수출실적" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"내수실적" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-성명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-성명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-직위(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-직위(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-전화",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-팩스",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-휴대폰",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-이메일",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가자-여권번호",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"통역" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-HS Code" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목1-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-HS Code" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목2-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-HS Code" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목설명(국문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"품목3-폼목설명(영문)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"희망 바이어 명단",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"참가목적" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"호텔" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"항공좌석(단체)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"항공좌석(개별)",fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"요청사항" ,fmtTitle); sheet.addCell(label);
                label = new jxl.write.Label(idx++,0,"회비납부" ,fmtTitle); sheet.addCell(label);

                     
                //아이템 항목 정보
                String add_item[] = new String[200];
                int add_i = 0;
                
                if(li_row > 0){
                    List<EgovMap> rsBizAppItemList = bsnsreqstinqireService.getBizApplicantItemName(bsnsreqstinqireDetailVO.getBizSeq());
                    if(rsBizAppItemList.size() > 0){
                        add_i = rsBizAppItemList.size();
                        for(int j = 0; j < rsBizAppItemList.size(); j++){
                            if(rsBizAppItemList.get(j).get("appItemName")!=null)
                            label = new jxl.write.Label(55+j,0,rsBizAppItemList.get(j).get("appItemName").toString() ,fmtTitle); sheet.addCell(label);
                            if(rsBizAppItemList.get(j).get("itemSeq")!=null)
                                add_item[j] = rsBizAppItemList.get(j).get("itemSeq").toString();
                        }
                    }
                }
                
                int intStep = 0;
                if (li_row >0){
                    //rsValue.first();
                    for (int i=0; i < li_row; i++){
                        String strCorpType = "";
                        if(rsValue.get(i).get("corpType")!=null) strCorpType=rsValue.get(i).get("corpType").toString();
                        String strCorpTypeNm = "";
                        
                        if("M".equals(strCorpType)) {
                            strCorpTypeNm = "Manufacture";
                        } else if("T".equals(strCorpType)) {
                            strCorpTypeNm = "Trade Agency";
                        }
                
                        String strTranslate = "";
                        if(rsValue.get(i).get("translateYn")!=null) strTranslate=rsValue.get(i).get("translateYn").toString();
                        String strTranslateNm = "";
                        
                        if("Y".equals(strTranslate)) {
                            strTranslateNm = "예";
                        } else if("N".equals(strTranslate)) {
                            strTranslateNm = "아니오";
                        }
                
                        String strPPObj = "";
                        if(rsValue.get(i).get("ppObj")!=null) strPPObj=rsValue.get(i).get("ppObj").toString();
                        String strPPObjEtc = "";
                        if(rsValue.get(i).get("ppObjEtc")!=null) strPPObjEtc=rsValue.get(i).get("ppObjEtc").toString();
                        String strPPObjNm = "";
                        
                        if(strPPObj.indexOf("EXP")>-1) {
                            strPPObjNm="수출 ";
                        }
                        if(strPPObj.indexOf("IMP")>-1) {
                            strPPObjNm=strPPObjNm+" 수입 ";
                        }
                        if(strPPObj.indexOf("IVE")>-1) {
                            strPPObjNm=strPPObjNm+" 투자 ";
                        }
                        if(strPPObj.indexOf("ETC")>-1) {
                            strPPObjNm=strPPObjNm+" 기타 ("+strPPObjEtc+")";
                        }
                    
                        intStep =  i+1;
                        
                        idx = 0;
                        label = new jxl.write.Label(idx++,i+1,intStep+"" ,fmtData); sheet.addCell(label);
                        
                        // 2014.05.15, hjh
                        // 엑셀 내 참석여부를 추가하기 위한 step 추가
                        if(step.equals("5") || step.equals("6")) {
                            String attendValue = "";
                            if(rsValue.get(i).get("attendanceOrderNum")!=null)
                                attendValue = rsValue.get(i).get("attendanceOrderNum").toString();
                            if(attendValue.equals("") || attendValue.equals("0"))
                                attendValue = "불참";
                            label = new jxl.write.Label(idx++,i+1,attendValue,fmtData); sheet.addCell(label);
                        }
                        
                        if(rsValue.get(i).get("compNo") == null) rsValue.get(i).put("compNo",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("compNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpKorNm") == null) rsValue.get(i).put("corpKorNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpKorNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpEngNm") == null) rsValue.get(i).put("corpEngNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpEngNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("personResiNo") == null) rsValue.get(i).put("personResiNo",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("personResiNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("appNm") == null) rsValue.get(i).put("appNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("appNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cellNo") == null) rsValue.get(i).put("cellNo",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cellNo").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpTel") == null) rsValue.get(i).put("corpTel",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpTel").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax") == null) rsValue.get(i).put("fax",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email") == null) rsValue.get(i).put("email",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("dept") == null) rsValue.get(i).put("dept",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("dept").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("pozNm") == null) rsValue.get(i).put("pozNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("pozNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("corpAddress") == null) rsValue.get(i).put("corpAddress",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("corpAddress").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strCorpTypeNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("empCnt") == null) rsValue.get(i).put("empCnt",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("empCnt").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("sales") == null) rsValue.get(i).put("sales",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("sales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("memberId") == null) rsValue.get(i).put("memberId",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("memberId").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("ceoNm") == null) rsValue.get(i).put("ceoNm",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("ceoNm").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport1") == null) rsValue.get(i).put("passport1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("homepage") == null) rsValue.get(i).put("homepage",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("homepage").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("address") == null) rsValue.get(i).put("address",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("address").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("exportSales") == null) rsValue.get(i).put("exportSales",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("exportSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("importSales") == null) rsValue.get(i).put("importSales",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("importSales").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("korNm1") == null) rsValue.get(i).put("korNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("korNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("engNm1") == null) rsValue.get(i).put("engNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("engNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiKorNm1") == null) rsValue.get(i).put("jikwiKorNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiKorNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("jikwiEngNm1") == null) rsValue.get(i).put("jikwiEngNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("jikwiEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("tel1") == null) rsValue.get(i).put("tel1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("tel1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("fax1") == null) rsValue.get(i).put("fax1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("fax1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("cell1") == null) rsValue.get(i).put("cell1","");
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("cell1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("email1") == null) rsValue.get(i).put("email1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("email1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("passport1") == null) rsValue.get(i).put("passport1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("passport1").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strTranslateNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode1") == null) rsValue.get(i).put("hscode1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm1") == null) rsValue.get(i).put("itemKorNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm1") == null) rsValue.get(i).put("itemEngNm1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent1") == null) rsValue.get(i).put("itemKorContent1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent1") == null) rsValue.get(i).put("itemEngContent1",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent1").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode2") == null) rsValue.get(i).put("hscode2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm2") == null) rsValue.get(i).put("itemKorNm2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm2") == null) rsValue.get(i).put("itemEngNm2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent2") == null) rsValue.get(i).put("itemKorContent2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent2") == null) rsValue.get(i).put("itemEngContent2",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent2").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hscode3") == null) rsValue.get(i).put("hscode3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hscode3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorNm3") == null) rsValue.get(i).put("itemKorNm3","");
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngNm3") == null) rsValue.get(i).put("itemEngNm3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngNm3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemKorContent3") == null) rsValue.get(i).put("itemKorContent3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemKorContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("itemEngContent3") == null) rsValue.get(i).put("itemEngContent3",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("itemEngContent3").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("buyerList") == null) rsValue.get(i).put("buyerList",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("buyerList").toString(),fmtData); sheet.addCell(label);
                        label = new jxl.write.Label(idx++,i+1,strPPObjNm,fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("hotelType") == null) rsValue.get(i).put("hotelType",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("hotelType").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("airTypeTeam") == null) rsValue.get(i).put("airTypeTeam",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("airTypeTeam").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("airTypePerson") == null) rsValue.get(i).put("airTypePerson",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("airTypePerson").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("reqContent") == null) rsValue.get(i).put("reqContent",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("reqContent").toString(),fmtData); sheet.addCell(label);
                        if(rsValue.get(i).get("feeCnt") == null) rsValue.get(i).put("feeCnt",""); 
                        label = new jxl.write.Label(idx++,i+1,rsValue.get(i).get("feeCnt").toString(),fmtData); sheet.addCell(label);


                        //아이템 항목 정보
                        //dsv.clear();
                        //dsv.put("appSeq", rsValue.getString("APP_SEQ"));
                        List<Map> rsBizAppItemList = bsnsreqstinqireService.getBizApplicantItemView(bsnsreqstinqireDetailVO.getAppSeq());
                        String strITEMVAL = "";
                        String strPreITEMSEQ = "0";
                        if(rsBizAppItemList.size() > 0){
                            int gubun = 0;
                            for(int k = 0; k < rsBizAppItemList.size(); k++){
                                
                                if(strPreITEMSEQ.equals(rsBizAppItemList.get(k).get("ITEM_SEQ"))) {
                                    strITEMVAL = strITEMVAL + ","+ rsBizAppItemList.get(k).get("ITEM_VAL") ;
                                } else {
                                    if(rsBizAppItemList.get(k).get("ITEM_VAL")!=null)
                                        strITEMVAL = rsBizAppItemList.get(k).get("ITEM_VAL").toString();
                                }
                                
                                for(int l = 0; l < add_i; l++){ //앞에서 설정한마지막 컬럼횟수 반복
                                    if(add_item[l].equals(rsBizAppItemList.get(k).get("ITEM_SEQ"))){ // 마지막 데이터의 컬럼 ITEM_SEQ 와 현재의 컬럼 ITEM_SEQ 같을경우 
                                        label = new jxl.write.Label(55+l,i+1,strITEMVAL     ,fmtData); sheet.addCell(label);
                                    } 
                                }
                                if(rsBizAppItemList.get(k).get("ITEM_SEQ")!=null)
                                    strPreITEMSEQ = rsBizAppItemList.get(k).get("ITEM_SEQ").toString();
                            }
                        }
                    }
                } else {
                    label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                    sheet.addCell(label);
                }
            } else if("MT002108".equals(bsnsreqstinqireDetailVO.getMode())){
                label = new jxl.write.Label(1, 1,"담당실 및 담당자", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(2, 1,"oooo실", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 1,"홍길동", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 1,"주의사항", fmtHeader);
                sheet.addCell(label);
                // -----------------------------------------------------------
                label = new jxl.write.Label(1, 2,"사업명", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 2,"ooooo 공청회", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 2,"1.사업자번호, 회사명,대표자명을 입력하면 회사가 추가됩니다.", fmtHeader);
                sheet.addCell(label);
                // -----------------------------------------------------------
                label = new jxl.write.Label(1, 3,"날짜(시작/종료)", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(2, 3,"2000-00-00", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 3,"2000-00-00", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 3,"2.번호(No.)가 입력되어 있는 데이터까지만 입력 됩니다.", fmtHeader);
                sheet.addCell(label);
                
                sheet.setColumnView(idx, 4);
                label = new jxl.write.Label(idx++,5,"No.",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"사업자등록번호",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 24);
                label = new jxl.write.Label(idx++,5,"회사명/기관명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 19);
                label = new jxl.write.Label(idx++,5,"대표자/기관명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 15);
                label = new jxl.write.Label(idx++,5,"참가자이름",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 14);
                label = new jxl.write.Label(idx++,5,"핸드폰번호",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 22);
                label = new jxl.write.Label(idx++,5,"이메일주소",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 19);
                label = new jxl.write.Label(idx++,5,"품목명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 15);
                label = new jxl.write.Label(idx++,5,"회사전화",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"부서명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"직위",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"생년월일",fmtTitle);
                sheet.addCell(label);

                int intStep = 0 ;
                if (li_row > 0) {
                    for (int i = 5 ; i < li_row+5 ; i++){
                        intStep = intStep + 1;
                        idx = 0;

                        label = new jxl.write.Label(idx++, i+1, intStep+"" , fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("compNo") == null) rsValue.get(i-5).put("compNo","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("compNo").toString(), fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("corpKorNm") == null) rsValue.get(i-5).put("corpKorNm","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("corpKorNm").toString(), fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("ceoNm") == null) rsValue.get(i-5).put("ceoNm","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("ceoNm").toString(), fmtData);
                        sheet.addCell(label);
                        
                        int searchType = 1;
                        String appNm = "";
                        if(rsValue.get(i-5).get("korNm1") != null) appNm = rsValue.get(i-5).get("korNm1").toString();
                        if(appNm == null || appNm.equals("")) {
                            if(rsValue.get(i-5).get("appNm") != null) appNm = rsValue.get(i-5).get("appNm").toString();
                            searchType = 2;
                        }
                        label = new jxl.write.Label(idx++, i+1, appNm, fmtData);
                        sheet.addCell(label);
                        
                        String cellNo = "";
                        if(searchType == 1){
                            if(rsValue.get(i-5).get("cell1") != null)
                            cellNo = rsValue.get(i-5).get("cell1").toString();
                        } else {
                            if(rsValue.get(i-5).get("cellNo") != null)
                            cellNo = rsValue.get(i-5).get("cellNo").toString();
                        }
                        label = new jxl.write.Label(idx++, i+1, cellNo, fmtData);
                        sheet.addCell(label);
                        
                        String email = "";
                        if(searchType == 1){
                            if(rsValue.get(i-5).get("email1") != null)
                            email = rsValue.get(i-5).get("email1").toString();
                        } else {
                            if(rsValue.get(i-5).get("email") != null)
                            email = rsValue.get(i-5).get("email").toString();
                        }
                        label = new jxl.write.Label(idx++, i+1, email, fmtData);
                        sheet.addCell(label);
                        
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                    }
                } 
                else {
                    label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                    sheet.addCell(label);
                }
            } else if("MT002108forContact".equals(bsnsreqstinqireDetailVO.getMode())){
                label = new jxl.write.Label(1, 1,"담당실 및 담당자", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(2, 1,"oooo실", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 1,"홍길동", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 1,"주의사항", fmtHeader);
                sheet.addCell(label);
                // -----------------------------------------------------------
                label = new jxl.write.Label(1, 2,"사업명", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 2,"ooooo 공청회", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 2,"1.사업자번호, 회사명,대표자명을 입력하면 회사가 추가됩니다.", fmtHeader);
                sheet.addCell(label);
                // -----------------------------------------------------------
                label = new jxl.write.Label(1, 3,"날짜(시작/종료)", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(2, 3,"2000-00-00", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(3, 3,"2000-00-00", fmtHeader);
                sheet.addCell(label);
                label = new jxl.write.Label(6, 3,"2.번호(No.)가 입력되어 있는 데이터까지만 입력 됩니다.", fmtHeader);
                sheet.addCell(label);
                
                sheet.setColumnView(idx, 4);
                label = new jxl.write.Label(idx++,5,"No.",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"사업자등록번호",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 24);
                label = new jxl.write.Label(idx++,5,"회사명/기관명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 19);
                label = new jxl.write.Label(idx++,5,"대표자/기관명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 15);
                label = new jxl.write.Label(idx++,5,"참가자이름",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 14);
                label = new jxl.write.Label(idx++,5,"핸드폰번호",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 22);
                label = new jxl.write.Label(idx++,5,"이메일주소",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 19);
                label = new jxl.write.Label(idx++,5,"품목명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 15);
                label = new jxl.write.Label(idx++,5,"회사전화",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"부서명",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"직위",fmtTitle);
                sheet.addCell(label);
                sheet.setColumnView(idx, 13);
                label = new jxl.write.Label(idx++,5,"생년월일",fmtTitle);
                sheet.addCell(label);
                label = new jxl.write.Label(idx++,5,"컨택현황",fmtTitle);
                sheet.addCell(label);

                int intStep = 0 ;
                if (li_row > 0) {
                    for (int i = 5 ; i < li_row+5 ; i++){
                        intStep = intStep + 1;
                        idx = 0;

                        label = new jxl.write.Label(idx++, i+1, intStep+"" , fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("compNo") == null) rsValue.get(i-5).put("compNo","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("compNo").toString(), fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("corpKorNm") == null) rsValue.get(i-5).put("corpKorNm","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("corpKorNm").toString(), fmtData);
                        sheet.addCell(label);
                        if(rsValue.get(i-5).get("ceoNm") == null) rsValue.get(i-5).put("ceoNm","");
                        label = new jxl.write.Label(idx++, i+1, rsValue.get(i-5).get("ceoNm").toString(), fmtData);
                        sheet.addCell(label);
                        
                        int searchType = 1;
                        String appNm = "";
                        if(rsValue.get(i-5).get("korNm1") != null) appNm = rsValue.get(i-5).get("korNm1").toString();
                        if(appNm == null || appNm.equals("")) {
                            if(rsValue.get(i-5).get("appNm") != null) appNm = rsValue.get(i-5).get("appNm").toString();
                            searchType = 2;
                        }
                        label = new jxl.write.Label(idx++, i+1, appNm, fmtData);
                        sheet.addCell(label);
                        
                        String cellNo = "";
                        if(searchType == 1){
                            if(rsValue.get(i-5).get("cell1") != null)
                            cellNo = rsValue.get(i-5).get("cell1").toString();
                        } else {
                            if(rsValue.get(i-5).get("cellNo") != null)
                            cellNo = rsValue.get(i-5).get("cellNo").toString();
                        }
                        label = new jxl.write.Label(idx++, i+1, cellNo, fmtData);
                        sheet.addCell(label);
                        
                        String email = "";
                        if(searchType == 1){
                            if(rsValue.get(i-5).get("email1") != null)
                            email = rsValue.get(i-5).get("email1").toString();
                        } else {
                            if(rsValue.get(i-5).get("email") != null)
                            email = rsValue.get(i-5).get("email").toString();
                        }
                        label = new jxl.write.Label(idx++, i+1, email, fmtData);
                        sheet.addCell(label);
                        
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                        label = new jxl.write.Label(idx++, i+1, "", fmtData);
                        sheet.addCell(label);
                    }
                } 
                else {
                    label = new jxl.write.Label(0,1,"검색된 결과가 없습니다.",fmtData);
                    sheet.addCell(label);
                }
            }
           workbook.write();
           workbook.close();

           bsnsreqstinqireDetailVO.setExcelFileName(excelFileName);
           bsnsreqstinqireDetailVO.setExcelFilePath("kita.crm.DRMFilePath.path");
           mav.addObject("success", true);
        } catch (NullPointerException e) {
            LOGGER.error("bsnsreqstinqireDetailBasicExcelDown() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        } catch (Exception e) {
            LOGGER.error("bsnsreqstinqireDetailBasicExcelDown() error", e);
            mav.addObject("success", false);
            mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
        }
        model.addAttribute("reqDataVO", bsnsreqstinqireDetailVO);
        
        return mav;
    } 
    /**
     * <pre>
     * 개요 : 엑셀업로드
     * </pre>
     * @Method Name : bsnsreqstinqireApplcntregist
     * @author : wonck
     * @date : 2017. 8. 30.
     * @param bsnsreqstinqireDetailVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntregist.do")
    public ModelAndView bsnsreqstinqireApplcntregist(MultipartHttpServletRequest multiRequest, ModelMap model, HttpServletRequest request, HttpServletResponse response) throws Exception {
        
        BsnsreqstinqireDetailVO bsnsreqstinqireDetailVO = new BsnsreqstinqireDetailVO();
        
        Map<String, String> requestParamMap = new HashMap<String, String>();
        
        Enumeration enumeration = request.getParameterNames();
        while (enumeration.hasMoreElements()) {
            String parameterName = (String) enumeration.nextElement();
            BeanUtils.copyProperty(bsnsreqstinqireDetailVO, CamelUtil.convert2CamelCase((String)parameterName), request.getParameter(parameterName));
        }

        ModelAndView mav = new ModelAndView("jsonView");

        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        
        String userId = loginInfoVO.getUserid();
        bsnsreqstinqireDetailVO.setUserId(userId);
        
        String uploadDirTemp = "";
        String uploadDir = "";
        String attachFileName = "";
        int rVal = 0;
        FileInputStream fisConf= null;
        try{
            try{
                uploadDir = propertiesService.getString("kita.crm.serviceFile.path");
            }catch(Exception e){
                e.printStackTrace();
            }finally{
                try{ fisConf.close(); }catch(Exception ee){}
            }
            
            List<FileVO> fileList = commonMnmtService.saveAtchFiles(multiRequest, drmMngUtil.DRMFilePath());
            for (Iterator iterator = fileList.iterator(); iterator.hasNext();) {
                FileVO fileVO = (FileVO) iterator.next();
                String filename = fileVO.getPhysFileNm();
                filename = filename.toLowerCase();

                attachFileName = filename;
                if (filename.endsWith(".xls")
                        || filename.endsWith(".xlsx")) {
                    try {
                        drmMngUtil.Extract(drmMngUtil.DRMFilePath(), uploadDir, fileVO.getPhysFileNm(), fileVO.getPhysFileNm());
                    } catch(Exception e) {
                        LOGGER.error("bsnsreqstinqireApplcntregist", e);
                        throw e;
                    }
                }
            }
            
            bsnsreqstinqireDetailVO.setFileName(attachFileName);
            bsnsreqstinqireDetailVO.setAttachFileName(attachFileName);
            String uploadType = bsnsreqstinqireDetailVO.getUploadType();
    
            if(uploadType != null && uploadType.equals("2")) {
                rVal = bsnsreqstinqireService.insertBizAppCompleteForExcel(bsnsreqstinqireDetailVO);
            }
            else {
                rVal = bsnsreqstinqireService.insertBasicAppForExcel(bsnsreqstinqireDetailVO);        
            }
            mav.addObject("success", true);
         } catch (NullPointerException e) {
             LOGGER.error("bsnsreqstinqireApplcntregist() error", e);
             mav.addObject("success", false);
             mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
         } catch (Exception e) {
             LOGGER.error("bsnsreqstinqireApplcntregist() error", e);
             mav.addObject("success", false);
             mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
         }
         model.addAttribute("reqDataVO", bsnsreqstinqireDetailVO);
         
         return mav;
     }
    /**
     * <pre>
     * 개요 : 사업신청자 목록 참석여부 변경
     * </pre>
     * @Method Name : bsnsreqstinqireApplcntListProc
     * @author : wonck
     * @date : 2017. 8. 30.
     * @param bsnsreqstinqireDetailVO
     * @param model
     * @param request
     * @param response
     * @return
     * @throws Exception
     */     
    @RequestMapping(value = "/kita/bsnsreqstmanage/bsnsreqstmanage/bsnsreqstinqireApplcntListProc.do")
    public ModelAndView bsnsreqstinqireApplcntListProc(@ModelAttribute("bsnsreqstinqireDetailVO") BsnsreqstinqireDetailVO bsnsreqstinqireDetailVO,ModelMap model,HttpServletRequest request, HttpServletResponse response) throws Exception {

        ModelAndView mav = new ModelAndView("jsonView");
        
        LoginInfoVO loginInfoVO = SessionManageAdminUtil.getLoginInfo(request);
        
        String userId = loginInfoVO.getUserid();
        bsnsreqstinqireDetailVO.setUserId(userId);
        
        try{
            
            String bizSeq = bsnsreqstinqireDetailVO.getBizSeq();
            String step = bsnsreqstinqireDetailVO.getStep();
            String status = bsnsreqstinqireDetailVO.getStatus();
            String Mtype_YN = bsnsreqstinqireDetailVO.getMtype();
            String gubun = bsnsreqstinqireDetailVO.getGubun();
            int attendanceCnt = 0;
            String params = "";
            
            int li_max   = 10;// 한페이지 나올 목록 수
            Cookie[] cookie = request.getCookies();
            String cook = "";
            for(int i=0;i<cookie.length;i++) {
                String tmp = cookie[i].getName();
                if("listViewCnt".equals(tmp)) {
                    li_max = Integer.parseInt(cookie[i].getValue());
                }
            }
            if("deleteSeq".equals(bsnsreqstinqireDetailVO.getMode())) {
                bsnsreqstinqireDetailVO.setSeqList(bsnsreqstinqireDetailVO.getCheckedSeqList().split(","));
                bsnsreqstinqireService.updateBizApplication(bsnsreqstinqireDetailVO);
                params = "?bizSeq=" + bizSeq + "&step=" + step + "&status=" + status + "&mtype=" + Mtype_YN + "&gubun=" + gubun;
            }

            /* 제외 참가자 삭제 S */
            else if("deleteAppSeq".equals(bsnsreqstinqireDetailVO.getMode())){
                bsnsreqstinqireDetailVO.setSeqList(bsnsreqstinqireDetailVO.getCheckedSeqList().split(","));
                bsnsreqstinqireService.deleteBizApplication(bsnsreqstinqireDetailVO);
                params = "?bizSeq=" + bizSeq + "&step=" + step + "&status=" + status + "&mtype=" + Mtype_YN + "&gubun=" + gubun;
            }
            /* 제외 참가자 삭제 E */
            
            else if("attendance".equals(bsnsreqstinqireDetailVO.getMode())){
                bsnsreqstinqireDetailVO.setCheckedAttendanceYn("N");
                attendanceCnt = bsnsreqstinqireService.updateAttendanceYn(bsnsreqstinqireDetailVO);
                if(attendanceCnt > 0){
                    params = "?bizSeq=" + bizSeq + "&step=" + step + "&status=" + status + "&mtype=" + Mtype_YN + "&gubun=" + gubun;
                }
            }
            
            else if("bizCompleteUpdate".equals(bsnsreqstinqireDetailVO.getMode())){
                bsnsreqstinqireService.updateBizCompleteYn(bsnsreqstinqireDetailVO);
                if("".equals(bsnsreqstinqireDetailVO.getrUrl())){
                    bsnsreqstinqireDetailVO.setrUrl("/jsp/IntegratedBusiness/listIntegratedBiz.jsp?S_MENU_CODE=8104");
                } else {
                    params = "?bizSeq=" + bizSeq + "&step=" + step + "&status=" + status + "&mtype=" + Mtype_YN + "&gubun=" + gubun;
                }
            }
            
            // hjh, 참가자 선별 시 체크박스로 다중으로 선택/선별할 수 있도록 기능 추가
            else if("attendanceSeq".equals(bsnsreqstinqireDetailVO.getMode())) {
                attendanceCnt = bsnsreqstinqireService.updateAttendanceYn(bsnsreqstinqireDetailVO);
                if(attendanceCnt > 0){
                    params = "?bizSeq=" + bizSeq + "&step=" + step + "&status=" + status + "&mtype=" + Mtype_YN + "&gubun=" + gubun 
                            + "&checkedAttendanceYn=" + bsnsreqstinqireDetailVO.getCheckedAttendanceYn();
                }
            }
            bsnsreqstinqireDetailVO.setParams(params);
            mav.addObject("success", true);
         } catch (NullPointerException e) {
             LOGGER.error("bsnsreqstinqireApplcntregist() error", e);
             mav.addObject("success", false);
             mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
         } catch (Exception e) {
             LOGGER.error("bsnsreqstinqireApplcntregist() error", e);
             mav.addObject("success", false);
             mav.addObject("errMsg", egovMessageSource.getMessage("fail.common.msg", null, Locale.getDefault()));
         }
         model.addAttribute("reqDataVO", bsnsreqstinqireDetailVO);
         
         return mav;
    }
    
    
}
